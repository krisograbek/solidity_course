{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dappTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dappToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowedTokensCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakerAddress",
          "type": "address"
        }
      ],
      "name": "getStakerTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getUserSingleTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeedContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "tokenIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPriceFeedMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokensStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "ustakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/kris/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/access/Ownable.sol",
    "1": "/home/kris/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
    "2": "/home/kris/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Context.sol",
    "3": "/home/kris/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "4": "contracts/TokenFarm.sol"
  },
  "ast": {
    "absolutePath": "contracts/TokenFarm.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        669
      ],
      "Context": [
        691
      ],
      "IERC20": [
        623
      ],
      "Ownable": [
        545
      ],
      "TokenFarm": [
        440
      ]
    },
    "id": 441,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:4"
      },
      {
        "absolutePath": "/home/kris/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 441,
        "sourceUnit": 546,
        "src": "58:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kris/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 441,
        "sourceUnit": 624,
        "src": "111:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kris/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 441,
        "sourceUnit": 670,
        "src": "168:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 545,
              "src": "268:7:4"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "268:7:4"
          }
        ],
        "canonicalName": "TokenFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 440,
        "linearizedBaseContracts": [
          440,
          545,
          691
        ],
        "name": "TokenFarm",
        "nameLocation": "255:9:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "29161a00",
            "id": 12,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nameLocation": "392:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 440,
            "src": "337:69:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "345:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "337:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 10,
                "keyType": {
                  "id": 8,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "364:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "356:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 9,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "375:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b83e0234",
            "id": 16,
            "mutability": "mutable",
            "name": "uniqueTokensStaked",
            "nameLocation": "495:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 440,
            "src": "460:53:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "468:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "460:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 14,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "479:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27927b3e",
            "id": 20,
            "mutability": "mutable",
            "name": "tokenPriceFeedMapping",
            "nameLocation": "619:21:4",
            "nodeType": "VariableDeclaration",
            "scope": 440,
            "src": "584:56:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "592:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "584:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "603:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 21,
              "nodeType": "StructuredDocumentation",
              "src": "647:44:4",
              "text": "@return The address of the allowed token"
            },
            "functionSelector": "5e5f2e26",
            "id": 24,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "713:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 440,
            "src": "696:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "696:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 23,
              "nodeType": "ArrayTypeName",
              "src": "696:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 27,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "772:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 440,
            "src": "755:24:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "755:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 26,
              "nodeType": "ArrayTypeName",
              "src": "755:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5eb186f8",
            "id": 30,
            "mutability": "mutable",
            "name": "dappToken",
            "nameLocation": "800:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 440,
            "src": "786:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$623",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 29,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 623,
                "src": "786:6:4"
              },
              "referencedDeclaration": 623,
              "src": "786:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$623",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "855:162:4",
              "statements": [
                {
                  "expression": {
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35,
                      "name": "dappToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "973:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$623",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 37,
                          "name": "_dappTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "992:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 36,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 623,
                        "src": "985:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$623_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "985:25:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$623",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "973:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$623",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "973:37:4"
                }
              ]
            },
            "id": 42,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_dappTokenAddress",
                  "nameLocation": "836:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "828:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:27:4"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:0:4"
            },
            "scope": 440,
            "src": "816:201:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "1196:59:4",
              "statements": [
                {
                  "expression": {
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 51,
                        "name": "tokenPriceFeedMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1206:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 53,
                      "indexExpression": {
                        "id": 52,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1228:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1206:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54,
                      "name": "_priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1238:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1206:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "1206:42:4"
                }
              ]
            },
            "functionSelector": "877dd39d",
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 49,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 487,
                  "src": "1182:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1182:9:4"
              }
            ],
            "name": "setPriceFeedContract",
            "nameLocation": "1102:20:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1131:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1123:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nameLocation": "1147:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1139:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1122:36:4"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1196:0:4"
            },
            "scope": 440,
            "src": "1093:162:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "1330:44:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 63,
                      "name": "allowedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1347:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1347:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 62,
                  "id": 65,
                  "nodeType": "Return",
                  "src": "1340:27:4"
                }
              ]
            },
            "functionSelector": "15148649",
            "id": 67,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllowedTokensCount",
            "nameLocation": "1270:21:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1291:2:4"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "count",
                  "nameLocation": "1323:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1315:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1314:15:4"
            },
            "scope": 440,
            "src": "1261:113:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "1461:659:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 75,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1479:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1489:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1479:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d757374206265206d6f7265207468616e2030",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1492:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c8935a62694df0f55eb616b304d0939d629638a210986a1a26cdc7bcc6a439a",
                          "typeString": "literal_string \"Amount must be more than 0\""
                        },
                        "value": "Amount must be more than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c8935a62694df0f55eb616b304d0939d629638a210986a1a26cdc7bcc6a439a",
                          "typeString": "literal_string \"Amount must be more than 0\""
                        }
                      ],
                      "id": 74,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1471:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1471:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:50:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "1554:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 82,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "1539:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1539:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206e6f7420616c6c6f77656421",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1563:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1896fd8fe501815b27860b1bd1ae5a48eaad2356794645cd1b32edf596424225",
                          "typeString": "literal_string \"Token not allowed!\""
                        },
                        "value": "Token not allowed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1896fd8fe501815b27860b1bd1ae5a48eaad2356794645cd1b32edf596424225",
                          "typeString": "literal_string \"Token not allowed!\""
                        }
                      ],
                      "id": 81,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1531:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1531:53:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 92,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1664:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1664:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 96,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1684:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFarm_$440",
                              "typeString": "contract TokenFarm"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFarm_$440",
                              "typeString": "contract TokenFarm"
                            }
                          ],
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1676:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 94,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1676:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1676:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1691:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 89,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "1643:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 88,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 623,
                          "src": "1636:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$623_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1636:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$623",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 604,
                      "src": "1636:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1636:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:63:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 102,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1734:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1734:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 104,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1746:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101,
                      "name": "updateUniqueTokensStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 393,
                      "src": "1709:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1709:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1709:44:4"
                },
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 107,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1815:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 111,
                        "indexExpression": {
                          "id": 108,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "1830:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1815:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "expression": {
                          "id": 109,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1838:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1838:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1815:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 113,
                            "name": "stakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1864:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 115,
                          "indexExpression": {
                            "id": 114,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "1879:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1864:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 118,
                        "indexExpression": {
                          "expression": {
                            "id": 116,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1887:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1887:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1864:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 119,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1913:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1864:56:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1815:105:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:105:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 123,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2028:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 126,
                      "indexExpression": {
                        "expression": {
                          "id": 124,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2047:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2047:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2028:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2062:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2028:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 137,
                  "nodeType": "IfStatement",
                  "src": "2024:90:4",
                  "trueBody": {
                    "id": 136,
                    "nodeType": "Block",
                    "src": "2065:49:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 132,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2092:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2092:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 129,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "2079:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2079:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2079:24:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 135,
                        "nodeType": "ExpressionStatement",
                        "src": "2079:24:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "0bea440d",
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nameLocation": "1409:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1429:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1421:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1446:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1438:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1420:33:4"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1461:0:4"
            },
            "scope": 440,
            "src": "1400:720:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "2171:309:4",
              "statements": [
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2189:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 190,
                      "src": "2181:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2181:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 152,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 146,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2199:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 148,
                      "indexExpression": {
                        "id": 147,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "2214:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2199:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 151,
                    "indexExpression": {
                      "expression": {
                        "id": 149,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2222:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2222:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2199:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2181:52:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 154,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "2251:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2261:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2251:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e672062616c616e63652063616e6e6f742062652030",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2264:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e708358322e459df3f084de37ae1bd5985e0bff1f56aabcb22fc0acda530bf58",
                          "typeString": "literal_string \"Staking balance cannot be 0\""
                        },
                        "value": "Staking balance cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e708358322e459df3f084de37ae1bd5985e0bff1f56aabcb22fc0acda530bf58",
                          "typeString": "literal_string \"Staking balance cannot be 0\""
                        }
                      ],
                      "id": 153,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2243:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2243:51:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2243:51:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 164,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2328:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2328:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 166,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "2340:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 161,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "2311:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 160,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 623,
                          "src": "2304:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$623_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2304:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$623",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 572,
                      "src": "2304:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2304:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2304:44:4"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 169,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "2358:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 173,
                        "indexExpression": {
                          "id": 170,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "2373:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2358:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 174,
                      "indexExpression": {
                        "expression": {
                          "id": 171,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2381:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2381:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2358:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2395:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2358:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2358:38:4"
                },
                {
                  "expression": {
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 178,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2406:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 181,
                      "indexExpression": {
                        "expression": {
                          "id": 179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2425:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2425:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2406:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 182,
                          "name": "uniqueTokensStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "2439:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 185,
                        "indexExpression": {
                          "expression": {
                            "id": 183,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2458:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2458:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2439:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2472:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2439:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2406:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2406:67:4"
                }
              ]
            },
            "functionSelector": "2073bbb9",
            "id": 191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ustakeTokens",
            "nameLocation": "2135:12:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2156:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2148:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2148:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2147:16:4"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2171:0:4"
            },
            "scope": 440,
            "src": "2126:354:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "2526:585:4",
              "statements": [
                {
                  "body": {
                    "id": 226,
                    "nodeType": "Block",
                    "src": "2602:503:4",
                    "statements": [
                      {
                        "assignments": [
                          208
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 208,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "2624:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 226,
                            "src": "2616:17:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 207,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2616:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 212,
                        "initialValue": {
                          "baseExpression": {
                            "id": 209,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "2636:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 211,
                          "indexExpression": {
                            "id": 210,
                            "name": "stakerId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "2644:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2636:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2616:37:4"
                      },
                      {
                        "assignments": [
                          214
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 214,
                            "mutability": "mutable",
                            "name": "stakerTotalValue",
                            "nameLocation": "2863:16:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 226,
                            "src": "2855:24:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 213,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2855:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 218,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 216,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "2902:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 215,
                            "name": "getStakerTotalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 276,
                            "src": "2882:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2882:30:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2855:57:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 222,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "3066:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 223,
                              "name": "stakerTotalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 214,
                              "src": "3077:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 219,
                              "name": "dappToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "3047:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$623",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 572,
                            "src": "3047:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3047:47:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 225,
                        "nodeType": "ExpressionStatement",
                        "src": "3047:47:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 200,
                      "name": "stakerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "2563:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 201,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2574:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2574:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2563:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 227,
                  "initializationExpression": {
                    "assignments": [
                      197
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "stakerId",
                        "nameLocation": "2549:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "2541:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2541:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 199,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2560:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2541:20:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2590:10:4",
                      "subExpression": {
                        "id": 204,
                        "name": "stakerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "2590:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 206,
                    "nodeType": "ExpressionStatement",
                    "src": "2590:10:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "2536:569:4"
                }
              ]
            },
            "functionSelector": "60ab5852",
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 194,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 193,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 487,
                  "src": "2516:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2516:9:4"
              }
            ],
            "name": "issueTokens",
            "nameLocation": "2495:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2506:2:4"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2526:0:4"
            },
            "scope": 440,
            "src": "2486:625:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "3228:502:4",
              "statements": [
                {
                  "assignments": [
                    237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 237,
                      "mutability": "mutable",
                      "name": "totalValue",
                      "nameLocation": "3246:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 275,
                      "src": "3238:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 236,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3238:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 239,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3259:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3238:22:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 241,
                            "name": "uniqueTokensStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "3278:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 243,
                          "indexExpression": {
                            "id": 242,
                            "name": "_stakerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "3297:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3278:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3315:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3278:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e67207374616b656421",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3318:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f549f7db439a7b7ab217503c4c59eff50fd9301f1dec6d85d13b53540198b8bf",
                          "typeString": "literal_string \"Nothing staked!\""
                        },
                        "value": "Nothing staked!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f549f7db439a7b7ab217503c4c59eff50fd9301f1dec6d85d13b53540198b8bf",
                          "typeString": "literal_string \"Nothing staked!\""
                        }
                      ],
                      "id": 240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3270:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3270:66:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "3270:66:4"
                },
                {
                  "body": {
                    "id": 271,
                    "nodeType": "Block",
                    "src": "3485:212:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 260,
                            "name": "totalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "3499:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 261,
                              "name": "totalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "3528:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 263,
                                  "name": "_stakerAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 231,
                                  "src": "3602:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 264,
                                    "name": "allowedTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "3638:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 266,
                                  "indexExpression": {
                                    "id": 265,
                                    "name": "allowedTokensId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 250,
                                    "src": "3652:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3638:30:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 262,
                                "name": "getUserSingleTokenValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 321,
                                "src": "3557:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view returns (uint256)"
                                }
                              },
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3557:129:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3528:158:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3499:187:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 270,
                        "nodeType": "ExpressionStatement",
                        "src": "3499:187:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 253,
                      "name": "allowedTokensId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "3405:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 254,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "3423:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3423:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3405:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 272,
                  "initializationExpression": {
                    "assignments": [
                      250
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 250,
                        "mutability": "mutable",
                        "name": "allowedTokensId",
                        "nameLocation": "3372:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "3364:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3364:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 252,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3390:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3364:27:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3457:17:4",
                      "subExpression": {
                        "id": 257,
                        "name": "allowedTokensId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "3457:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 259,
                    "nodeType": "ExpressionStatement",
                    "src": "3457:17:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "3346:351:4"
                },
                {
                  "expression": {
                    "id": 273,
                    "name": "totalValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 237,
                    "src": "3713:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 235,
                  "id": 274,
                  "nodeType": "Return",
                  "src": "3706:17:4"
                }
              ]
            },
            "functionSelector": "e9075080",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakerTotalValue",
            "nameLocation": "3126:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "_stakerAddress",
                  "nameLocation": "3154:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "3146:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3146:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3145:24:4"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "3215:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3215:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3214:9:4"
            },
            "scope": 440,
            "src": "3117:613:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "3860:435:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 285,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3874:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 287,
                      "indexExpression": {
                        "id": 286,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "3893:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3874:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3905:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3874:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 293,
                  "nodeType": "IfStatement",
                  "src": "3870:213:4",
                  "trueBody": {
                    "id": 292,
                    "nodeType": "Block",
                    "src": "3908:175:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4071:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 284,
                        "id": 291,
                        "nodeType": "Return",
                        "src": "4064:8:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    295,
                    297
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "4102:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 320,
                      "src": "4094:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4094:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 297,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "4117:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 320,
                      "src": "4109:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 296,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4109:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 301,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 299,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "4143:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 298,
                      "name": "getTokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "4129:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4129:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4093:57:4"
                },
                {
                  "assignments": [
                    303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 303,
                      "mutability": "mutable",
                      "name": "totalValueInUsd",
                      "nameLocation": "4168:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 320,
                      "src": "4160:23:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 302,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4160:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 317,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 304,
                                "name": "stakingBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "4187:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 306,
                              "indexExpression": {
                                "id": 305,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "4202:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4187:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 308,
                            "indexExpression": {
                              "id": 307,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 278,
                              "src": "4210:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4187:31:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 309,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "4221:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4187:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 311,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4186:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4243:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 313,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "4247:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4243:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 315,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4242:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4186:70:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4160:96:4"
                },
                {
                  "expression": {
                    "id": 318,
                    "name": "totalValueInUsd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 303,
                    "src": "4273:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 284,
                  "id": 319,
                  "nodeType": "Return",
                  "src": "4266:22:4"
                }
              ]
            },
            "functionSelector": "276b11da",
            "id": 321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserSingleTokenValue",
            "nameLocation": "3745:23:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "3777:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "3769:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3769:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3794:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "3786:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3786:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3768:33:4"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "3847:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3847:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3846:9:4"
            },
            "scope": 440,
            "src": "3736:559:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "4407:341:4",
              "statements": [
                {
                  "assignments": [
                    331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 331,
                      "mutability": "mutable",
                      "name": "priceFeedAddress",
                      "nameLocation": "4425:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 365,
                      "src": "4417:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 330,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4417:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 335,
                  "initialValue": {
                    "baseExpression": {
                      "id": 332,
                      "name": "tokenPriceFeedMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "4444:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 334,
                    "indexExpression": {
                      "id": 333,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 323,
                      "src": "4466:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4444:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4417:56:4"
                },
                {
                  "assignments": [
                    338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 338,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "4505:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 365,
                      "src": "4483:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$669",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 337,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 336,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 669,
                          "src": "4483:21:4"
                        },
                        "referencedDeclaration": 669,
                        "src": "4483:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$669",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 342,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 340,
                        "name": "priceFeedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "4552:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 339,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "4517:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$669_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4517:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$669",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4483:95:4"
                },
                {
                  "assignments": [
                    null,
                    344,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 344,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "4598:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 365,
                      "src": "4591:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 343,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4591:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 348,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 345,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
                        "src": "4613:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$669",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 668,
                      "src": "4613:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4613:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4588:52:4"
                },
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "4658:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 365,
                      "src": "4650:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4650:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 357,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 353,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 338,
                            "src": "4677:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$669",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 630,
                          "src": "4677:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4677:20:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4669:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 351,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4669:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4669:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4650:48:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 360,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "4724:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4716:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 358,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4716:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4716:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 362,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "4732:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 363,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4715:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 329,
                  "id": 364,
                  "nodeType": "Return",
                  "src": "4708:33:4"
                }
              ]
            },
            "functionSelector": "f1c5d6c2",
            "id": 366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenValue",
            "nameLocation": "4310:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4332:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "4324:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4324:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4323:16:4"
            },
            "returnParameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "4385:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4385:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "4394:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4384:18:4"
            },
            "scope": 440,
            "src": "4301:447:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 392,
              "nodeType": "Block",
              "src": "4842:144:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 373,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "4856:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 375,
                        "indexExpression": {
                          "id": 374,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "4871:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4856:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 377,
                      "indexExpression": {
                        "id": 376,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "4879:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4856:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4891:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4856:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 391,
                  "nodeType": "IfStatement",
                  "src": "4852:128:4",
                  "trueBody": {
                    "id": 390,
                    "nodeType": "Block",
                    "src": "4894:86:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 380,
                              "name": "uniqueTokensStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "4908:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 382,
                            "indexExpression": {
                              "id": 381,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 368,
                              "src": "4927:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4908:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 383,
                                "name": "uniqueTokensStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "4938:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 385,
                              "indexExpression": {
                                "id": 384,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 368,
                                "src": "4957:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4938:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4968:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4938:31:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4908:61:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 389,
                        "nodeType": "ExpressionStatement",
                        "src": "4908:61:4"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateUniqueTokensStaked",
            "nameLocation": "4763:24:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "4796:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 393,
                  "src": "4788:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4788:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4813:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 393,
                  "src": "4805:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4805:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4787:33:4"
            },
            "returnParameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4842:0:4"
            },
            "scope": 440,
            "src": "4754:232:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "5051:43:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 403,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "5080:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 400,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "5061:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5061:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5061:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "5061:26:4"
                }
              ]
            },
            "functionSelector": "171e44ea",
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 398,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 397,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 487,
                  "src": "5041:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5041:9:4"
              }
            ],
            "name": "addAllowedTokens",
            "nameLocation": "5001:16:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5026:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "5018:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5018:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5017:16:4"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5051:0:4"
            },
            "scope": 440,
            "src": "4992:102:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 438,
              "nodeType": "Block",
              "src": "5162:197:4",
              "statements": [
                {
                  "body": {
                    "id": 434,
                    "nodeType": "Block",
                    "src": "5229:102:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 425,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "5247:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 427,
                            "indexExpression": {
                              "id": 426,
                              "name": "idx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "5261:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5247:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 428,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 409,
                            "src": "5269:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5247:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 433,
                        "nodeType": "IfStatement",
                        "src": "5243:78:4",
                        "trueBody": {
                          "id": 432,
                          "nodeType": "Block",
                          "src": "5277:44:4",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5302:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 413,
                              "id": 431,
                              "nodeType": "Return",
                              "src": "5295:11:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 418,
                      "name": "idx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 415,
                      "src": "5194:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 419,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "5200:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5200:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5194:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 435,
                  "initializationExpression": {
                    "assignments": [
                      415
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 415,
                        "mutability": "mutable",
                        "name": "idx",
                        "nameLocation": "5185:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "5177:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 414,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5177:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 417,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5191:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5177:15:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5222:5:4",
                      "subExpression": {
                        "id": 422,
                        "name": "idx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "5222:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 424,
                    "nodeType": "ExpressionStatement",
                    "src": "5222:5:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "5172:159:4"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5347:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 413,
                  "id": 437,
                  "nodeType": "Return",
                  "src": "5340:12:4"
                }
              ]
            },
            "functionSelector": "dd5b8467",
            "id": 439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenIsAllowed",
            "nameLocation": "5109:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5132:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "5124:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5124:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5123:16:4"
            },
            "returnParameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "5156:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5156:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5155:6:4"
            },
            "scope": 440,
            "src": "5100:259:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 441,
        "src": "246:5115:4",
        "usedErrors": []
      }
    ],
    "src": "33:5329:4"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161109038038061109083398101604081905261002f916100ad565b6100383361005d565b600680546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610fa4806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806360ab5852116100ad578063dd5b846711610071578063dd5b846714610271578063e907508014610294578063f1c5d6c2146102a7578063f2fde38b146102cf578063fd5e6dd1146102e257600080fd5b806360ab58521461021d578063715018a614610225578063877dd39d1461022d5780638da5cb5b14610240578063b83e02341461025157600080fd5b8063276b11da116100f4578063276b11da1461017857806327927b3e1461018b57806329161a00146101cc5780635e5f2e26146101f75780635eb186f81461020a57600080fd5b80630bea440d14610126578063151486491461013b578063171e44ea146101525780632073bbb914610165575b600080fd5b610139610134366004610c52565b6102f5565b005b6004545b6040519081526020015b60405180910390f35b610139610160366004610c7e565b6104c1565b610139610173366004610c7e565b61053d565b61013f610186366004610ca0565b61066d565b6101b4610199366004610c7e565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610149565b61013f6101da366004610ca0565b600160209081526000928352604080842090915290825290205481565b6101b4610205366004610cca565b6106f7565b6006546101b4906001600160a01b031681565b610139610721565b61013961081e565b61013961023b366004610ca0565b610854565b6000546001600160a01b03166101b4565b61013f61025f366004610c7e565b60026020526000908152604090205481565b61028461027f366004610c7e565b6108ac565b6040519015158152602001610149565b61013f6102a2366004610c7e565b610916565b6102ba6102b5366004610c7e565b6109d2565b60408051928352602083019190915201610149565b6101396102dd366004610c7e565b610ad3565b6101b46102f0366004610cca565b610b6b565b6000821161034a5760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e74206d757374206265206d6f7265207468616e203000000000000060448201526064015b60405180910390fd5b610353816108ac565b6103945760405162461bcd60e51b8152602060048201526012602482015271546f6b656e206e6f7420616c6c6f7765642160701b6044820152606401610341565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af11580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b9190610ce3565b506104163382610b7b565b6001600160a01b0381166000908152600160209081526040808320338452909152902054610445908390610d1b565b6001600160a01b0382166000908152600160208181526040808420338552825280842094909455600290529190205414156104bd57600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b031916331790555b5050565b6000546001600160a01b031633146104eb5760405162461bcd60e51b815260040161034190610d33565b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600160209081526040808320338452909152902054806105ae5760405162461bcd60e51b815260206004820152601b60248201527f5374616b696e672062616c616e63652063616e6e6f74206265203000000000006044820152606401610341565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af11580156105fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061f9190610ce3565b506001600160a01b038216600090815260016020818152604080842033855282528084208490556002909152909120546106599190610d68565b336000908152600260205260409020555050565b6001600160a01b038216600090815260026020526040812054610692575060006106f1565b60008061069e846109d2565b909250905060006106b082600a610e63565b6001600160a01b038087166000908152600160209081526040808320938b16835292905220546106e1908590610e6f565b6106eb9190610e8e565b93505050505b92915050565b6004818154811061070757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331461074b5760405162461bcd60e51b815260040161034190610d33565b60005b60055481101561081b5760006005828154811061076d5761076d610eb0565b60009182526020822001546001600160a01b0316915061078c82610916565b60065460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156107e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108059190610ce3565b505050808061081390610ec6565b91505061074e565b50565b6000546001600160a01b031633146108485760405162461bcd60e51b815260040161034190610d33565b6108526000610be6565b565b6000546001600160a01b0316331461087e5760405162461bcd60e51b815260040161034190610d33565b6001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6000805b60045481101561090d57826001600160a01b0316600482815481106108d7576108d7610eb0565b6000918252602090912001546001600160a01b031614156108fb5750600192915050565b8061090581610ec6565b9150506108b0565b50600092915050565b6001600160a01b038116600090815260026020526040812054819061096f5760405162461bcd60e51b815260206004820152600f60248201526e4e6f7468696e67207374616b65642160881b6044820152606401610341565b60005b6004548110156109cb576109ad846004838154811061099357610993610eb0565b6000918252602090912001546001600160a01b031661066d565b6109b79083610d1b565b9150806109c381610ec6565b915050610972565b5092915050565b6001600160a01b03808216600090815260036020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa158015610a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a579190610efb565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac19190610f4b565b919760ff909216965090945050505050565b6000546001600160a01b03163314610afd5760405162461bcd60e51b815260040161034190610d33565b6001600160a01b038116610b625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610341565b61081b81610be6565b6005818154811061070757600080fd5b6001600160a01b038082166000908152600160209081526040808320938616835292905220546104bd576001600160a01b038216600090815260026020526040902054610bc9906001610d1b565b6001600160a01b0383166000908152600260205260409020555050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610c4d57600080fd5b919050565b60008060408385031215610c6557600080fd5b82359150610c7560208401610c36565b90509250929050565b600060208284031215610c9057600080fd5b610c9982610c36565b9392505050565b60008060408385031215610cb357600080fd5b610cbc83610c36565b9150610c7560208401610c36565b600060208284031215610cdc57600080fd5b5035919050565b600060208284031215610cf557600080fd5b81518015158114610c9957600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610d2e57610d2e610d05565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610d7a57610d7a610d05565b500390565b600181815b80851115610dba578160001904821115610da057610da0610d05565b80851615610dad57918102915b93841c9390800290610d84565b509250929050565b600082610dd1575060016106f1565b81610dde575060006106f1565b8160018114610df45760028114610dfe57610e1a565b60019150506106f1565b60ff841115610e0f57610e0f610d05565b50506001821b6106f1565b5060208310610133831016604e8410600b8410161715610e3d575081810a6106f1565b610e478383610d7f565b8060001904821115610e5b57610e5b610d05565b029392505050565b6000610c998383610dc2565b6000816000190483118215151615610e8957610e89610d05565b500290565b600082610eab57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610eda57610eda610d05565b5060010190565b805169ffffffffffffffffffff81168114610c4d57600080fd5b600080600080600060a08688031215610f1357600080fd5b610f1c86610ee1565b9450602086015193506040860151925060608601519150610f3f60808701610ee1565b90509295509295909350565b600060208284031215610f5d57600080fd5b815160ff81168114610c9957600080fdfea26469706673582212207fd525b2d9ee09b252a16e32f7eb8a56058b0144d6981f10631fcdda27a83ba364736f6c634300080b0033",
  "bytecodeSha1": "28aa82bbb1847f8adea136f4640fb1b7e99e88c9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "TokenFarm",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "37": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "TokenFarm.stakeTokens": {
          "32": [
            1479,
            1490,
            true
          ],
          "33": [
            1539,
            1561,
            true
          ],
          "34": [
            2028,
            2063,
            false
          ]
        },
        "TokenFarm.tokenIsAllowed": {
          "36": [
            5247,
            5275,
            false
          ]
        },
        "TokenFarm.ustakeTokens": {
          "35": [
            2251,
            2262,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "30": [
            2378,
            2395
          ],
          "31": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "17": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "27": [
            1998,
            2071
          ],
          "28": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "3": {},
      "4": {
        "TokenFarm.addAllowedTokens": {
          "9": [
            5061,
            5087
          ]
        },
        "TokenFarm.getAllowedTokensCount": {
          "0": [
            1340,
            1367
          ]
        },
        "TokenFarm.getStakerTotalValue": {
          "22": [
            3270,
            3336
          ],
          "23": [
            3499,
            3686
          ],
          "24": [
            3457,
            3474
          ],
          "25": [
            3706,
            3723
          ]
        },
        "TokenFarm.getTokenValue": {
          "26": [
            4708,
            4741
          ]
        },
        "TokenFarm.getUserSingleTokenValue": {
          "14": [
            4064,
            4072
          ]
        },
        "TokenFarm.issueTokens": {
          "15": [
            3047,
            3094
          ],
          "16": [
            2590,
            2600
          ]
        },
        "TokenFarm.setPriceFeedContract": {
          "18": [
            1206,
            1248
          ]
        },
        "TokenFarm.stakeTokens": {
          "2": [
            1471,
            1521
          ],
          "3": [
            1531,
            1584
          ],
          "4": [
            1636,
            1699
          ],
          "5": [
            1709,
            1753
          ],
          "6": [
            1815,
            1920
          ],
          "7": [
            2079,
            2103
          ]
        },
        "TokenFarm.tokenIsAllowed": {
          "19": [
            5295,
            5306
          ],
          "20": [
            5222,
            5227
          ],
          "21": [
            5340,
            5352
          ]
        },
        "TokenFarm.updateUniqueTokensStaked": {
          "29": [
            4908,
            4969
          ]
        },
        "TokenFarm.ustakeTokens": {
          "10": [
            2243,
            2294
          ],
          "11": [
            2304,
            2348
          ],
          "12": [
            2358,
            2396
          ],
          "13": [
            2406,
            2473
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101215760003560e01c806360ab5852116100ad578063dd5b846711610071578063dd5b846714610271578063e907508014610294578063f1c5d6c2146102a7578063f2fde38b146102cf578063fd5e6dd1146102e257600080fd5b806360ab58521461021d578063715018a614610225578063877dd39d1461022d5780638da5cb5b14610240578063b83e02341461025157600080fd5b8063276b11da116100f4578063276b11da1461017857806327927b3e1461018b57806329161a00146101cc5780635e5f2e26146101f75780635eb186f81461020a57600080fd5b80630bea440d14610126578063151486491461013b578063171e44ea146101525780632073bbb914610165575b600080fd5b610139610134366004610c52565b6102f5565b005b6004545b6040519081526020015b60405180910390f35b610139610160366004610c7e565b6104c1565b610139610173366004610c7e565b61053d565b61013f610186366004610ca0565b61066d565b6101b4610199366004610c7e565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610149565b61013f6101da366004610ca0565b600160209081526000928352604080842090915290825290205481565b6101b4610205366004610cca565b6106f7565b6006546101b4906001600160a01b031681565b610139610721565b61013961081e565b61013961023b366004610ca0565b610854565b6000546001600160a01b03166101b4565b61013f61025f366004610c7e565b60026020526000908152604090205481565b61028461027f366004610c7e565b6108ac565b6040519015158152602001610149565b61013f6102a2366004610c7e565b610916565b6102ba6102b5366004610c7e565b6109d2565b60408051928352602083019190915201610149565b6101396102dd366004610c7e565b610ad3565b6101b46102f0366004610cca565b610b6b565b6000821161034a5760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e74206d757374206265206d6f7265207468616e203000000000000060448201526064015b60405180910390fd5b610353816108ac565b6103945760405162461bcd60e51b8152602060048201526012602482015271546f6b656e206e6f7420616c6c6f7765642160701b6044820152606401610341565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af11580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b9190610ce3565b506104163382610b7b565b6001600160a01b0381166000908152600160209081526040808320338452909152902054610445908390610d1b565b6001600160a01b0382166000908152600160208181526040808420338552825280842094909455600290529190205414156104bd57600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b031916331790555b5050565b6000546001600160a01b031633146104eb5760405162461bcd60e51b815260040161034190610d33565b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600160209081526040808320338452909152902054806105ae5760405162461bcd60e51b815260206004820152601b60248201527f5374616b696e672062616c616e63652063616e6e6f74206265203000000000006044820152606401610341565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af11580156105fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061f9190610ce3565b506001600160a01b038216600090815260016020818152604080842033855282528084208490556002909152909120546106599190610d68565b336000908152600260205260409020555050565b6001600160a01b038216600090815260026020526040812054610692575060006106f1565b60008061069e846109d2565b909250905060006106b082600a610e63565b6001600160a01b038087166000908152600160209081526040808320938b16835292905220546106e1908590610e6f565b6106eb9190610e8e565b93505050505b92915050565b6004818154811061070757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331461074b5760405162461bcd60e51b815260040161034190610d33565b60005b60055481101561081b5760006005828154811061076d5761076d610eb0565b60009182526020822001546001600160a01b0316915061078c82610916565b60065460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156107e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108059190610ce3565b505050808061081390610ec6565b91505061074e565b50565b6000546001600160a01b031633146108485760405162461bcd60e51b815260040161034190610d33565b6108526000610be6565b565b6000546001600160a01b0316331461087e5760405162461bcd60e51b815260040161034190610d33565b6001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6000805b60045481101561090d57826001600160a01b0316600482815481106108d7576108d7610eb0565b6000918252602090912001546001600160a01b031614156108fb5750600192915050565b8061090581610ec6565b9150506108b0565b50600092915050565b6001600160a01b038116600090815260026020526040812054819061096f5760405162461bcd60e51b815260206004820152600f60248201526e4e6f7468696e67207374616b65642160881b6044820152606401610341565b60005b6004548110156109cb576109ad846004838154811061099357610993610eb0565b6000918252602090912001546001600160a01b031661066d565b6109b79083610d1b565b9150806109c381610ec6565b915050610972565b5092915050565b6001600160a01b03808216600090815260036020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa158015610a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a579190610efb565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac19190610f4b565b919760ff909216965090945050505050565b6000546001600160a01b03163314610afd5760405162461bcd60e51b815260040161034190610d33565b6001600160a01b038116610b625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610341565b61081b81610be6565b6005818154811061070757600080fd5b6001600160a01b038082166000908152600160209081526040808320938616835292905220546104bd576001600160a01b038216600090815260026020526040902054610bc9906001610d1b565b6001600160a01b0383166000908152600260205260409020555050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610c4d57600080fd5b919050565b60008060408385031215610c6557600080fd5b82359150610c7560208401610c36565b90509250929050565b600060208284031215610c9057600080fd5b610c9982610c36565b9392505050565b60008060408385031215610cb357600080fd5b610cbc83610c36565b9150610c7560208401610c36565b600060208284031215610cdc57600080fd5b5035919050565b600060208284031215610cf557600080fd5b81518015158114610c9957600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610d2e57610d2e610d05565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610d7a57610d7a610d05565b500390565b600181815b80851115610dba578160001904821115610da057610da0610d05565b80851615610dad57918102915b93841c9390800290610d84565b509250929050565b600082610dd1575060016106f1565b81610dde575060006106f1565b8160018114610df45760028114610dfe57610e1a565b60019150506106f1565b60ff841115610e0f57610e0f610d05565b50506001821b6106f1565b5060208310610133831016604e8410600b8410161715610e3d575081810a6106f1565b610e478383610d7f565b8060001904821115610e5b57610e5b610d05565b029392505050565b6000610c998383610dc2565b6000816000190483118215151615610e8957610e89610d05565b500290565b600082610eab57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610eda57610eda610d05565b5060010190565b805169ffffffffffffffffffff81168114610c4d57600080fd5b600080600080600060a08688031215610f1357600080fd5b610f1c86610ee1565b9450602086015193506040860151925060608601519150610f3f60808701610ee1565b90509295509295909350565b600060208284031215610f5d57600080fd5b815160ff81168114610c9957600080fdfea26469706673582212207fd525b2d9ee09b252a16e32f7eb8a56058b0144d6981f10631fcdda27a83ba364736f6c634300080b0033",
  "deployedSourceMap": "246:5115:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:720;;;;;;:::i;:::-;;:::i;:::-;;1261:113;1347:13;:20;1261:113;;;597:25:5;;;585:2;570:18;1261:113:4;;;;;;;;4992:102;;;;;;:::i;:::-;;:::i;2126:354::-;;;;;;:::i;:::-;;:::i;3736:559::-;;;;;;:::i;:::-;;:::i;584:56::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;584:56:4;;;;;;-1:-1:-1;;;;;1253:32:5;;;1235:51;;1223:2;1208:18;584:56:4;1089:203:5;337:69:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;696:30;;;;;;:::i;:::-;;:::i;786:23::-;;;;;-1:-1:-1;;;;;786:23:4;;;2486:625;;;:::i;1668:101:0:-;;;:::i;1093:162:4:-;;;;;;:::i;:::-;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;460:53:4;;;;;;:::i;:::-;;;;;;;;;;;;;;5100:259;;;;;;:::i;:::-;;:::i;:::-;;;1869:14:5;;1862:22;1844:41;;1832:2;1817:18;5100:259:4;1704:187:5;3117:613:4;;;;;;:::i;:::-;;:::i;4301:447::-;;;;;;:::i;:::-;;:::i;:::-;;;;2070:25:5;;;2126:2;2111:18;;2104:34;;;;2043:18;4301:447:4;1896:248:5;1918:198:0;;;;;;:::i;:::-;;:::i;755:24:4:-;;;;;;:::i;:::-;;:::i;1400:720::-;1489:1;1479:7;:11;1471:50;;;;-1:-1:-1;;;1471:50:4;;2351:2:5;1471:50:4;;;2333:21:5;2390:2;2370:18;;;2363:30;2429:28;2409:18;;;2402:56;2475:18;;1471:50:4;;;;;;;;;1539:22;1554:6;1539:14;:22::i;:::-;1531:53;;;;-1:-1:-1;;;1531:53:4;;2706:2:5;1531:53:4;;;2688:21:5;2745:2;2725:18;;;2718:30;-1:-1:-1;;;2764:18:5;;;2757:48;2822:18;;1531:53:4;2504:342:5;1531:53:4;1636:63;;-1:-1:-1;;;1636:63:4;;1664:10;1636:63;;;3091:34:5;1684:4:4;3141:18:5;;;3134:43;3193:18;;;3186:34;;;-1:-1:-1;;;;;1636:27:4;;;;;3026:18:5;;1636:63:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1709:44;1734:10;1746:6;1709:24;:44::i;:::-;-1:-1:-1;;;;;1864:22:4;;;;;;:14;:22;;;;;;;;1887:10;1864:34;;;;;;;;:56;;1913:7;;1864:56;:::i;:::-;-1:-1:-1;;;;;1815:22:4;;;;;;:14;:22;;;;;;;;1838:10;1815:34;;;;;;;:105;;;;2028:18;:30;;;;;;:35;2024:90;;;2079:7;:24;;;;;;;-1:-1:-1;2079:24:4;;;;;;;;-1:-1:-1;;;;;;2079:24:4;2092:10;2079:24;;;2024:90;1400:720;;:::o;4992:102::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5061:13:4::1;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;5061:26:4;;;;;::::1;::::0;;-1:-1:-1;;;;;;5061:26:4::1;-1:-1:-1::0;;;;;5061:26:4;;;::::1;::::0;;;::::1;::::0;;4992:102::o;2126:354::-;-1:-1:-1;;;;;2199:22:4;;2181:15;2199:22;;;:14;:22;;;;;;;;2222:10;2199:34;;;;;;;;2251:11;2243:51;;;;-1:-1:-1;;;2243:51:4;;4341:2:5;2243:51:4;;;4323:21:5;4380:2;4360:18;;;4353:30;4419:29;4399:18;;;4392:57;4466:18;;2243:51:4;4139:351:5;2243:51:4;2304:44;;-1:-1:-1;;;2304:44:4;;2328:10;2304:44;;;4669:51:5;4736:18;;;4729:34;;;-1:-1:-1;;;;;2304:23:4;;;;;4642:18:5;;2304:44:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2358:22:4;;2395:1;2358:22;;;:14;:22;;;;;;;;2381:10;2358:34;;;;;;;:38;;;2439:18;:30;;;;;;;:34;;2358:14;2439:34;:::i;:::-;2425:10;2406:30;;;;:18;:30;;;;;:67;-1:-1:-1;;2126:354:4:o;3736:559::-;-1:-1:-1;;;;;3874:27:4;;3847:7;3874:27;;;:18;:27;;;;;;3870:213;;-1:-1:-1;4071:1:4;4064:8;;3870:213;4094:13;4109:16;4129:21;4143:6;4129:13;:21::i;:::-;4093:57;;-1:-1:-1;4093:57:4;-1:-1:-1;4160:23:4;4243:12;4093:57;4243:2;:12;:::i;:::-;-1:-1:-1;;;;;4187:22:4;;;;;;;:14;:22;;;;;;;;:31;;;;;;;;;;:39;;4221:5;;4187:39;:::i;:::-;4186:70;;;;:::i;:::-;4160:96;-1:-1:-1;;;;3736:559:4;;;;;:::o;696:30::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;696:30:4;;-1:-1:-1;696:30:4;:::o;2486:625::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2541:16:4::1;2536:569;2574:7;:14:::0;2563:25;::::1;2536:569;;;2616:17;2636:7;2644:8;2636:17;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;2636:17:4::1;::::0;-1:-1:-1;2882:30:4::1;2636:17:::0;2882:19:::1;:30::i;:::-;3047:9;::::0;:47:::1;::::0;-1:-1:-1;;;3047:47:4;;-1:-1:-1;;;;;4687:32:5;;;3047:47:4::1;::::0;::::1;4669:51:5::0;4736:18;;;4729:34;;;2855:57:4;;-1:-1:-1;3047:9:4;::::1;::::0;:18:::1;::::0;4642::5;;3047:47:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2602:503;;2590:10;;;;;:::i;:::-;;;;2536:569;;;;2486:625::o:0;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1093:162:4:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1206:29:4;;::::1;;::::0;;;:21:::1;:29;::::0;;;;:42;;-1:-1:-1;;;;;;1206:42:4::1;::::0;;;::::1;;::::0;;1093:162::o;5100:259::-;5156:4;;5172:159;5200:13;:20;5194:26;;5172:159;;;5269:6;-1:-1:-1;;;;;5247:28:4;:13;5261:3;5247:18;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5247:18:4;:28;5243:78;;;-1:-1:-1;5302:4:4;;5100:259;-1:-1:-1;;5100:259:4:o;5243:78::-;5222:5;;;;:::i;:::-;;;;5172:159;;;-1:-1:-1;5347:5:4;;5100:259;-1:-1:-1;;5100:259:4:o;3117:613::-;-1:-1:-1;;;;;3278:34:4;;3215:7;3278:34;;;:18;:34;;;;;;3215:7;;3270:66;;;;-1:-1:-1;;;3270:66:4;;7147:2:5;3270:66:4;;;7129:21:5;7186:2;7166:18;;;7159:30;-1:-1:-1;;;7205:18:5;;;7198:45;7260:18;;3270:66:4;6945:339:5;3270:66:4;3364:23;3346:351;3423:13;:20;3405:38;;3346:351;;;3557:129;3602:14;3638:13;3652:15;3638:30;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3638:30:4;3557:23;:129::i;:::-;3528:158;;:10;:158;:::i;:::-;3499:187;-1:-1:-1;3457:17:4;;;;:::i;:::-;;;;3346:351;;;-1:-1:-1;3713:10:4;3117:613;-1:-1:-1;;3117:613:4:o;4301:447::-;-1:-1:-1;;;;;4444:29:4;;;4385:7;4444:29;;;:21;:29;;;;;;;4613:27;;-1:-1:-1;;;4613:27:4;;;;4385:7;;;;4444:29;;;;;4385:7;;4444:29;;4613:25;;:27;;;;;;;;;;;;;;;4444:29;4613:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4588:52;;;;;;4650:16;4677:9;-1:-1:-1;;;;;4677:18:4;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4724:5;;4669:29;;;;;-1:-1:-1;4724:5:4;;-1:-1:-1;;;;;4301:447:4:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;8431:2:5;1998:73:0::1;::::0;::::1;8413:21:5::0;8470:2;8450:18;;;8443:30;8509:34;8489:18;;;8482:62;-1:-1:-1;;;8560:18:5;;;8553:36;8606:19;;1998:73:0::1;8229:402:5::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;755:24:4:-:0;;;;;;;;;;;;4754:232;-1:-1:-1;;;;;4856:22:4;;;4891:1;4856:22;;;:14;:22;;;;;;;;:31;;;;;;;;;;4852:128;;-1:-1:-1;;;;;4938:27:4;;;;;;:18;:27;;;;;;:31;;4968:1;4938:31;:::i;:::-;-1:-1:-1;;;;;4908:27:4;;;;;;:18;:27;;;;;:61;4754:232;;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;373:9;360:23;350:33;;402:38;436:2;425:9;421:18;402:38;:::i;:::-;392:48;;192:254;;;;;:::o;633:186::-;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;784:29;803:9;784:29;:::i;:::-;774:39;633:186;-1:-1:-1;;;633:186:5:o;824:260::-;892:6;900;953:2;941:9;932:7;928:23;924:32;921:52;;;969:1;966;959:12;921:52;992:29;1011:9;992:29;:::i;:::-;982:39;;1040:38;1074:2;1063:9;1059:18;1040:38;:::i;1297:180::-;1356:6;1409:2;1397:9;1388:7;1384:23;1380:32;1377:52;;;1425:1;1422;1415:12;1377:52;-1:-1:-1;1448:23:5;;1297:180;-1:-1:-1;1297:180:5:o;3231:277::-;3298:6;3351:2;3339:9;3330:7;3326:23;3322:32;3319:52;;;3367:1;3364;3357:12;3319:52;3399:9;3393:16;3452:5;3445:13;3438:21;3431:5;3428:32;3418:60;;3474:1;3471;3464:12;3513:127;3574:10;3569:3;3565:20;3562:1;3555:31;3605:4;3602:1;3595:15;3629:4;3626:1;3619:15;3645:128;3685:3;3716:1;3712:6;3709:1;3706:13;3703:39;;;3722:18;;:::i;:::-;-1:-1:-1;3758:9:5;;3645:128::o;3778:356::-;3980:2;3962:21;;;3999:18;;;3992:30;4058:34;4053:2;4038:18;;4031:62;4125:2;4110:18;;3778:356::o;4774:125::-;4814:4;4842:1;4839;4836:8;4833:34;;;4847:18;;:::i;:::-;-1:-1:-1;4884:9:5;;4774:125::o;4904:422::-;4993:1;5036:5;4993:1;5050:270;5071:7;5061:8;5058:21;5050:270;;;5130:4;5126:1;5122:6;5118:17;5112:4;5109:27;5106:53;;;5139:18;;:::i;:::-;5189:7;5179:8;5175:22;5172:55;;;5209:16;;;;5172:55;5288:22;;;;5248:15;;;;5050:270;;;5054:3;4904:422;;;;;:::o;5331:806::-;5380:5;5410:8;5400:80;;-1:-1:-1;5451:1:5;5465:5;;5400:80;5499:4;5489:76;;-1:-1:-1;5536:1:5;5550:5;;5489:76;5581:4;5599:1;5594:59;;;;5667:1;5662:130;;;;5574:218;;5594:59;5624:1;5615:10;;5638:5;;;5662:130;5699:3;5689:8;5686:17;5683:43;;;5706:18;;:::i;:::-;-1:-1:-1;;5762:1:5;5748:16;;5777:5;;5574:218;;5876:2;5866:8;5863:16;5857:3;5851:4;5848:13;5844:36;5838:2;5828:8;5825:16;5820:2;5814:4;5811:12;5807:35;5804:77;5801:159;;;-1:-1:-1;5913:19:5;;;5945:5;;5801:159;5992:34;6017:8;6011:4;5992:34;:::i;:::-;6062:6;6058:1;6054:6;6050:19;6041:7;6038:32;6035:58;;;6073:18;;:::i;:::-;6111:20;;5331:806;-1:-1:-1;;;5331:806:5:o;6142:131::-;6202:5;6231:36;6258:8;6252:4;6231:36;:::i;6278:168::-;6318:7;6384:1;6380;6376:6;6372:14;6369:1;6366:21;6361:1;6354:9;6347:17;6343:45;6340:71;;;6391:18;;:::i;:::-;-1:-1:-1;6431:9:5;;6278:168::o;6451:217::-;6491:1;6517;6507:132;;6561:10;6556:3;6552:20;6549:1;6542:31;6596:4;6593:1;6586:15;6624:4;6621:1;6614:15;6507:132;-1:-1:-1;6653:9:5;;6451:217::o;6673:127::-;6734:10;6729:3;6725:20;6722:1;6715:31;6765:4;6762:1;6755:15;6789:4;6786:1;6779:15;6805:135;6844:3;-1:-1:-1;;6865:17:5;;6862:43;;;6885:18;;:::i;:::-;-1:-1:-1;6932:1:5;6921:13;;6805:135::o;7289:179::-;7367:13;;7420:22;7409:34;;7399:45;;7389:73;;7458:1;7455;7448:12;7473:473;7576:6;7584;7592;7600;7608;7661:3;7649:9;7640:7;7636:23;7632:33;7629:53;;;7678:1;7675;7668:12;7629:53;7701:39;7730:9;7701:39;:::i;:::-;7691:49;;7780:2;7769:9;7765:18;7759:25;7749:35;;7824:2;7813:9;7809:18;7803:25;7793:35;;7868:2;7857:9;7853:18;7847:25;7837:35;;7891:49;7935:3;7924:9;7920:19;7891:49;:::i;:::-;7881:59;;7473:473;;;;;;;;:::o;7951:273::-;8019:6;8072:2;8060:9;8051:7;8047:23;8043:32;8040:52;;;8088:1;8085;8078:12;8040:52;8120:9;8114:16;8170:4;8163:5;8159:16;8152:5;8149:27;8139:55;;8190:1;8187;8180:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "allowedTokens": {
        "return": "The address of the allowed token",
        "returns": {
          "_0": "The address of the allowed token"
        }
      }
    },
    "version": 1
  },
  "offset": [
    246,
    5361
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60AB5852 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDD5B8467 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xE9075080 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xF1C5D6C2 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60AB5852 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x877DD39D EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xB83E0234 EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x276B11DA GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x276B11DA EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x27927B3E EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x29161A00 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x5EB186F8 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBEA440D EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x15148649 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x171E44EA EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x2073BBB9 EQ PUSH2 0x165 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xC52 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH2 0x13F PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x149 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0xCCA JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1B4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x81E JUMP JUMPDEST PUSH2 0x139 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x284 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x149 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x149 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0xC7E JUMP JUMPDEST PUSH2 0xAD3 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0xCCA JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x34A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206D6F7265207468616E2030000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x353 DUP2 PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x394 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x546F6B656E206E6F7420616C6C6F77656421 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST POP PUSH2 0x416 CALLER DUP3 PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x445 SWAP1 DUP4 SWAP1 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x2 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD EQ ISZERO PUSH2 0x4BD JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x341 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E672062616C616E63652063616E6E6F7420626520300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x659 SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x692 JUMPI POP PUSH1 0x0 PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x69E DUP5 PUSH2 0x9D2 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x6B0 DUP3 PUSH1 0xA PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP12 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x6E1 SWAP1 DUP6 SWAP1 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x341 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x76D JUMPI PUSH2 0x76D PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x78C DUP3 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x805 SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x813 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x74E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x848 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x341 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x852 PUSH1 0x0 PUSH2 0xBE6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x87E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x341 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x90D JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8D7 JUMPI PUSH2 0x8D7 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x8FB JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x905 DUP2 PUSH2 0xEC6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8B0 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F7468696E67207374616B656421 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x9CB JUMPI PUSH2 0x9AD DUP5 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x993 JUMPI PUSH2 0x993 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x66D JUMP JUMPDEST PUSH2 0x9B7 SWAP1 DUP4 PUSH2 0xD1B JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x9C3 DUP2 PUSH2 0xEC6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x972 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP5 SWAP4 SWAP2 AND SWAP2 DUP3 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0xEFB JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST SWAP2 SWAP8 PUSH1 0xFF SWAP1 SWAP3 AND SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x341 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x81B DUP2 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x4BD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBC9 SWAP1 PUSH1 0x1 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xC75 PUSH1 0x20 DUP5 ADD PUSH2 0xC36 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC99 DUP3 PUSH2 0xC36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCBC DUP4 PUSH2 0xC36 JUMP JUMPDEST SWAP2 POP PUSH2 0xC75 PUSH1 0x20 DUP5 ADD PUSH2 0xC36 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD2E JUMPI PUSH2 0xD2E PUSH2 0xD05 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD7A JUMPI PUSH2 0xD7A PUSH2 0xD05 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xDBA JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xDA0 JUMPI PUSH2 0xDA0 PUSH2 0xD05 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xDAD JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xD84 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDD1 JUMPI POP PUSH1 0x1 PUSH2 0x6F1 JUMP JUMPDEST DUP2 PUSH2 0xDDE JUMPI POP PUSH1 0x0 PUSH2 0x6F1 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xDF4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xDFE JUMPI PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xE0F JUMPI PUSH2 0xE0F PUSH2 0xD05 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x6F1 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE3D JUMPI POP DUP2 DUP2 EXP PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0xE47 DUP4 DUP4 PUSH2 0xD7F JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xE5B JUMPI PUSH2 0xE5B PUSH2 0xD05 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC99 DUP4 DUP4 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE89 JUMPI PUSH2 0xE89 PUSH2 0xD05 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEAB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xEDA JUMPI PUSH2 0xEDA PUSH2 0xD05 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF1C DUP7 PUSH2 0xEE1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xF3F PUSH1 0x80 DUP8 ADD PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xC99 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xD525B2D9EE09B252A16E32F7EB8A56058B0144D6981F10631FCDDA27A83BA364 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        246,
        5361
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x121"
    },
    "25": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x60AB5852"
    },
    "38": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD5B8467"
    },
    "49": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD5B8467"
    },
    "60": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x271"
    },
    "64": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE9075080"
    },
    "71": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x294"
    },
    "75": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF1C5D6C2"
    },
    "82": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A7"
    },
    "86": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2CF"
    },
    "97": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFD5E6DD1"
    },
    "104": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E2"
    },
    "108": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "REVERT",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x60AB5852"
    },
    "120": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21D"
    },
    "124": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "131": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x225"
    },
    "135": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x877DD39D"
    },
    "142": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22D"
    },
    "146": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "153": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x240"
    },
    "157": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xB83E0234"
    },
    "164": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x251"
    },
    "168": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "172": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "REVERT",
      "path": "4"
    },
    "173": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "174": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "175": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x276B11DA"
    },
    "180": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "GT",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "185": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "186": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x276B11DA"
    },
    "191": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "192": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x178"
    },
    "195": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x27927B3E"
    },
    "202": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18B"
    },
    "206": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x29161A00"
    },
    "213": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "214": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CC"
    },
    "217": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "218": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "219": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5E5F2E26"
    },
    "224": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "225": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F7"
    },
    "228": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "229": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "230": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5EB186F8"
    },
    "235": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "236": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20A"
    },
    "239": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "240": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "243": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "REVERT",
      "path": "4"
    },
    "244": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "245": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "246": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xBEA440D"
    },
    "251": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "252": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x126"
    },
    "255": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "256": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "257": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x15148649"
    },
    "262": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "263": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13B"
    },
    "266": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "267": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "268": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x171E44EA"
    },
    "273": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "274": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x152"
    },
    "277": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "278": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "279": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x2073BBB9"
    },
    "284": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "EQ",
      "path": "4"
    },
    "285": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x165"
    },
    "288": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "289": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "290": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "292": {
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "293": {
      "first_revert": true,
      "fn": null,
      "offset": [
        246,
        5361
      ],
      "op": "REVERT",
      "path": "4"
    },
    "294": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1400,
        2120
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "295": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1400,
        2120
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "298": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1400,
        2120
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x134"
    },
    "301": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1400,
        2120
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "302": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1400,
        2120
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "304": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1400,
        2120
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC52"
    },
    "307": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        1400,
        2120
      ],
      "op": "JUMP",
      "path": "4"
    },
    "308": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1400,
        2120
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "309": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1400,
        2120
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F5"
    },
    "312": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        1400,
        2120
      ],
      "op": "JUMP",
      "path": "4"
    },
    "313": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1400,
        2120
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "314": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1400,
        2120
      ],
      "op": "STOP",
      "path": "4"
    },
    "315": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1261,
        1374
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "316": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1347,
        1360
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 0,
      "value": "0x4"
    },
    "318": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1347,
        1367
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "319": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1261,
        1374
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "320": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1261,
        1374
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "322": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1261,
        1374
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "323": {
      "op": "SWAP1"
    },
    "324": {
      "op": "DUP2"
    },
    "325": {
      "op": "MSTORE"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "328": {
      "op": "ADD"
    },
    "329": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1261,
        1374
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "330": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1261,
        1374
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "332": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1261,
        1374
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "333": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1261,
        1374
      ],
      "op": "DUP1",
      "path": "4"
    },
    "334": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1261,
        1374
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "335": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1261,
        1374
      ],
      "op": "SUB",
      "path": "4"
    },
    "336": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1261,
        1374
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "337": {
      "fn": "TokenFarm.getAllowedTokensCount",
      "offset": [
        1261,
        1374
      ],
      "op": "RETURN",
      "path": "4"
    },
    "338": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        4992,
        5094
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "339": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        4992,
        5094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "342": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        4992,
        5094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x160"
    },
    "345": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        4992,
        5094
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "346": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        4992,
        5094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "348": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        4992,
        5094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7E"
    },
    "351": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "i",
      "offset": [
        4992,
        5094
      ],
      "op": "JUMP",
      "path": "4"
    },
    "352": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        4992,
        5094
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "353": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        4992,
        5094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C1"
    },
    "356": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "i",
      "offset": [
        4992,
        5094
      ],
      "op": "JUMP",
      "path": "4"
    },
    "357": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2126,
        2480
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "358": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2126,
        2480
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "361": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2126,
        2480
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x173"
    },
    "364": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2126,
        2480
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "365": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2126,
        2480
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "367": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2126,
        2480
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7E"
    },
    "370": {
      "fn": "TokenFarm.ustakeTokens",
      "jump": "i",
      "offset": [
        2126,
        2480
      ],
      "op": "JUMP",
      "path": "4"
    },
    "371": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2126,
        2480
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "372": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2126,
        2480
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x53D"
    },
    "375": {
      "fn": "TokenFarm.ustakeTokens",
      "jump": "i",
      "offset": [
        2126,
        2480
      ],
      "op": "JUMP",
      "path": "4"
    },
    "376": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "377": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F"
    },
    "380": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x186"
    },
    "383": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "384": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "386": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCA0"
    },
    "389": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        3736,
        4295
      ],
      "op": "JUMP",
      "path": "4"
    },
    "390": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "391": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x66D"
    },
    "394": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        3736,
        4295
      ],
      "op": "JUMP",
      "path": "4"
    },
    "395": {
      "offset": [
        584,
        640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "396": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B4"
    },
    "399": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x199"
    },
    "402": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "403": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "405": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7E"
    },
    "408": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        584,
        640
      ],
      "op": "JUMP",
      "path": "4"
    },
    "409": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "410": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "412": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "414": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "415": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "417": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "418": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "DUP2",
      "path": "4"
    },
    "419": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "420": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "422": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "423": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "424": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "431": {
      "op": "SHL"
    },
    "432": {
      "op": "SUB"
    },
    "433": {
      "offset": [
        584,
        640
      ],
      "op": "AND",
      "path": "4"
    },
    "434": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "DUP2",
      "path": "4"
    },
    "435": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "JUMP",
      "path": "4"
    },
    "436": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "437": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "439": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        584,
        640
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "446": {
      "op": "SHL"
    },
    "447": {
      "op": "SUB"
    },
    "448": {
      "op": "SWAP1"
    },
    "449": {
      "op": "SWAP2"
    },
    "450": {
      "op": "AND"
    },
    "451": {
      "op": "DUP2"
    },
    "452": {
      "op": "MSTORE"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "455": {
      "op": "ADD"
    },
    "456": {
      "offset": [
        584,
        640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x149"
    },
    "459": {
      "op": "JUMP"
    },
    "460": {
      "offset": [
        337,
        406
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "461": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F"
    },
    "464": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DA"
    },
    "467": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "468": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "470": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCA0"
    },
    "473": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        337,
        406
      ],
      "op": "JUMP",
      "path": "4"
    },
    "474": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "475": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "477": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "479": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "480": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "DUP2",
      "path": "4"
    },
    "481": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "482": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "484": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "485": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "DUP4",
      "path": "4"
    },
    "486": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "487": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "489": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "DUP1",
      "path": "4"
    },
    "490": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "DUP5",
      "path": "4"
    },
    "491": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "492": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "493": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "494": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "495": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "496": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "DUP3",
      "path": "4"
    },
    "497": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "498": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "499": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "500": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "501": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "DUP2",
      "path": "4"
    },
    "502": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        337,
        406
      ],
      "op": "JUMP",
      "path": "4"
    },
    "503": {
      "offset": [
        696,
        726
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "504": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B4"
    },
    "507": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x205"
    },
    "510": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "511": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "513": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCCA"
    },
    "516": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        696,
        726
      ],
      "op": "JUMP",
      "path": "4"
    },
    "517": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "518": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6F7"
    },
    "521": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        696,
        726
      ],
      "op": "JUMP",
      "path": "4"
    },
    "522": {
      "offset": [
        786,
        809
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "523": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        786,
        809
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "525": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        786,
        809
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "526": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        786,
        809
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B4"
    },
    "529": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        786,
        809
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "536": {
      "op": "SHL"
    },
    "537": {
      "op": "SUB"
    },
    "538": {
      "offset": [
        786,
        809
      ],
      "op": "AND",
      "path": "4"
    },
    "539": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        786,
        809
      ],
      "op": "DUP2",
      "path": "4"
    },
    "540": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        786,
        809
      ],
      "op": "JUMP",
      "path": "4"
    },
    "541": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2486,
        3111
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "542": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2486,
        3111
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "545": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2486,
        3111
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x721"
    },
    "548": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        2486,
        3111
      ],
      "op": "JUMP",
      "path": "4"
    },
    "549": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "550": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139"
    },
    "553": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81E"
    },
    "556": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "557": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1093,
        1255
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "558": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1093,
        1255
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "561": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1093,
        1255
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23B"
    },
    "564": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1093,
        1255
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "565": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1093,
        1255
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "567": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1093,
        1255
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCA0"
    },
    "570": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "i",
      "offset": [
        1093,
        1255
      ],
      "op": "JUMP",
      "path": "4"
    },
    "571": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1093,
        1255
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "572": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1093,
        1255
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x854"
    },
    "575": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "i",
      "offset": [
        1093,
        1255
      ],
      "op": "JUMP",
      "path": "4"
    },
    "576": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "577": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "579": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 1
    },
    "580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "586": {
      "op": "SHL"
    },
    "587": {
      "op": "SUB"
    },
    "588": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "589": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B4"
    },
    "592": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "593": {
      "offset": [
        460,
        513
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "594": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F"
    },
    "597": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x25F"
    },
    "600": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "601": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "603": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7E"
    },
    "606": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        460,
        513
      ],
      "op": "JUMP",
      "path": "4"
    },
    "607": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "608": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "610": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "612": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "613": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "615": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "616": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "DUP2",
      "path": "4"
    },
    "617": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "618": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "620": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "621": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "622": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "623": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "DUP2",
      "path": "4"
    },
    "624": {
      "fn": "Ownable.owner",
      "offset": [
        460,
        513
      ],
      "op": "JUMP",
      "path": "4"
    },
    "625": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "626": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x284"
    },
    "629": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27F"
    },
    "632": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "633": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "635": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7E"
    },
    "638": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5100,
        5359
      ],
      "op": "JUMP",
      "path": "4"
    },
    "639": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "640": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8AC"
    },
    "643": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5100,
        5359
      ],
      "op": "JUMP",
      "path": "4"
    },
    "644": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "645": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "647": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "648": {
      "op": "SWAP1"
    },
    "649": {
      "op": "ISZERO"
    },
    "650": {
      "op": "ISZERO"
    },
    "651": {
      "op": "DUP2"
    },
    "652": {
      "op": "MSTORE"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "655": {
      "op": "ADD"
    },
    "656": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x149"
    },
    "659": {
      "op": "JUMP"
    },
    "660": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3117,
        3730
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "661": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3117,
        3730
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F"
    },
    "664": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3117,
        3730
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A2"
    },
    "667": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3117,
        3730
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "668": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3117,
        3730
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "670": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3117,
        3730
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7E"
    },
    "673": {
      "fn": "TokenFarm.getStakerTotalValue",
      "jump": "i",
      "offset": [
        3117,
        3730
      ],
      "op": "JUMP",
      "path": "4"
    },
    "674": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3117,
        3730
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "675": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3117,
        3730
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x916"
    },
    "678": {
      "fn": "TokenFarm.getStakerTotalValue",
      "jump": "i",
      "offset": [
        3117,
        3730
      ],
      "op": "JUMP",
      "path": "4"
    },
    "679": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "680": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2BA"
    },
    "683": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B5"
    },
    "686": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "687": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "689": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC7E"
    },
    "692": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        4301,
        4748
      ],
      "op": "JUMP",
      "path": "4"
    },
    "693": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "694": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D2"
    },
    "697": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        4301,
        4748
      ],
      "op": "JUMP",
      "path": "4"
    },
    "698": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "699": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "701": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "DUP1",
      "path": "4"
    },
    "702": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "703": {
      "op": "SWAP3"
    },
    "704": {
      "op": "DUP4"
    },
    "705": {
      "op": "MSTORE"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "708": {
      "op": "DUP4"
    },
    "709": {
      "op": "ADD"
    },
    "710": {
      "op": "SWAP2"
    },
    "711": {
      "op": "SWAP1"
    },
    "712": {
      "op": "SWAP2"
    },
    "713": {
      "op": "MSTORE"
    },
    "714": {
      "op": "ADD"
    },
    "715": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x149"
    },
    "718": {
      "op": "JUMP"
    },
    "719": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "720": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139"
    },
    "723": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DD"
    },
    "726": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "727": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "729": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7E"
    },
    "732": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "733": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "734": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD3"
    },
    "737": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "738": {
      "offset": [
        755,
        779
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "739": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B4"
    },
    "742": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F0"
    },
    "745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "746": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCCA"
    },
    "751": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        755,
        779
      ],
      "op": "JUMP",
      "path": "4"
    },
    "752": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "753": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6B"
    },
    "756": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        755,
        779
      ],
      "op": "JUMP",
      "path": "4"
    },
    "757": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1400,
        2120
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "758": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1489,
        1490
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x0"
    },
    "760": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1479,
        1486
      ],
      "op": "DUP3",
      "path": "4"
    },
    "761": {
      "branch": 32,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1479,
        1490
      ],
      "op": "GT",
      "path": "4"
    },
    "762": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x34A"
    },
    "765": {
      "branch": 32,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "766": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "768": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "769": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "773": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "775": {
      "op": "SHL"
    },
    "776": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "DUP2",
      "path": "4"
    },
    "777": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "780": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "782": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "DUP3",
      "path": "4"
    },
    "783": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "ADD",
      "path": "4"
    },
    "784": {
      "op": "MSTORE"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "789": {
      "op": "DUP3"
    },
    "790": {
      "op": "ADD"
    },
    "791": {
      "op": "MSTORE"
    },
    "792": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D757374206265206D6F7265207468616E2030000000000000"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "827": {
      "op": "DUP3"
    },
    "828": {
      "op": "ADD"
    },
    "829": {
      "op": "MSTORE"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "832": {
      "op": "ADD"
    },
    "833": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "834": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "836": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "837": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "DUP1",
      "path": "4"
    },
    "838": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "839": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "SUB",
      "path": "4"
    },
    "840": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "841": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "842": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1471,
        1521
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "843": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1539,
        1561
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 3,
      "value": "0x353"
    },
    "846": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1554,
        1560
      ],
      "op": "DUP2",
      "path": "4"
    },
    "847": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1539,
        1553
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8AC"
    },
    "850": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        1539,
        1561
      ],
      "op": "JUMP",
      "path": "4"
    },
    "851": {
      "branch": 33,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1539,
        1561
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "852": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1531,
        1584
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x394"
    },
    "855": {
      "branch": 33,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1531,
        1584
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "856": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1531,
        1584
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "858": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1531,
        1584
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "859": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "863": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "865": {
      "op": "SHL"
    },
    "866": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1531,
        1584
      ],
      "op": "DUP2",
      "path": "4"
    },
    "867": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1531,
        1584
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "870": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1531,
        1584
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "872": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1531,
        1584
      ],
      "op": "DUP3",
      "path": "4"
    },
    "873": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1531,
        1584
      ],
      "op": "ADD",
      "path": "4"
    },
    "874": {
      "op": "MSTORE"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "879": {
      "op": "DUP3"
    },
    "880": {
      "op": "ADD"
    },
    "881": {
      "op": "MSTORE"
    },
    "882": {
      "op": "PUSH18",
      "value": "0x546F6B656E206E6F7420616C6C6F77656421"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "903": {
      "op": "SHL"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "906": {
      "op": "DUP3"
    },
    "907": {
      "op": "ADD"
    },
    "908": {
      "op": "MSTORE"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "911": {
      "op": "ADD"
    },
    "912": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1531,
        1584
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x341"
    },
    "915": {
      "op": "JUMP"
    },
    "916": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1531,
        1584
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "917": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 4,
      "value": "0x40"
    },
    "919": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "920": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "925": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "927": {
      "op": "SHL"
    },
    "928": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "DUP2",
      "path": "4"
    },
    "929": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "930": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1664,
        1674
      ],
      "op": "CALLER",
      "path": "4"
    },
    "931": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "933": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "DUP3",
      "path": "4"
    },
    "934": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "ADD",
      "path": "4"
    },
    "935": {
      "op": "MSTORE"
    },
    "936": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1684,
        1688
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "939": {
      "op": "DUP3"
    },
    "940": {
      "op": "ADD"
    },
    "941": {
      "op": "MSTORE"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "944": {
      "op": "DUP2"
    },
    "945": {
      "op": "ADD"
    },
    "946": {
      "op": "DUP4"
    },
    "947": {
      "op": "SWAP1"
    },
    "948": {
      "op": "MSTORE"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1663
      ],
      "op": "DUP3",
      "path": "4"
    },
    "958": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1663
      ],
      "op": "AND",
      "path": "4"
    },
    "959": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1663
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "960": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1663
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "965": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1663
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "968": {
      "op": "ADD"
    },
    "969": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "971": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "973": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "974": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "DUP1",
      "path": "4"
    },
    "975": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "DUP4",
      "path": "4"
    },
    "976": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "SUB",
      "path": "4"
    },
    "977": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "DUP2",
      "path": "4"
    },
    "978": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "980": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "DUP8",
      "path": "4"
    },
    "981": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "GAS",
      "path": "4"
    },
    "982": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "CALL",
      "path": "4"
    },
    "983": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "984": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "DUP1",
      "path": "4"
    },
    "985": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "986": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E7"
    },
    "989": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "990": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "991": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "993": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "DUP1",
      "path": "4"
    },
    "994": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "995": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "996": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "998": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "REVERT",
      "path": "4"
    },
    "999": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1000": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "POP",
      "path": "4"
    },
    "1001": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "POP",
      "path": "4"
    },
    "1002": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "POP",
      "path": "4"
    },
    "1003": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "POP",
      "path": "4"
    },
    "1004": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1006": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1007": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1008": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1010": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "NOT",
      "path": "4"
    },
    "1011": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1013": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1014": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "ADD",
      "path": "4"
    },
    "1015": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "AND",
      "path": "4"
    },
    "1016": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1017": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "ADD",
      "path": "4"
    },
    "1018": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1019": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1021": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1022": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "POP",
      "path": "4"
    },
    "1023": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1024": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "ADD",
      "path": "4"
    },
    "1025": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1026": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x40B"
    },
    "1029": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1030": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1031": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE3"
    },
    "1034": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        1636,
        1699
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1035": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1036": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1636,
        1699
      ],
      "op": "POP",
      "path": "4"
    },
    "1037": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1709,
        1753
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 5,
      "value": "0x416"
    },
    "1040": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1734,
        1744
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1041": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1746,
        1752
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1042": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1709,
        1733
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB7B"
    },
    "1045": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        1709,
        1753
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1046": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1709,
        1753
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1053": {
      "op": "SHL"
    },
    "1054": {
      "op": "SUB"
    },
    "1055": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 6
    },
    "1056": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "AND",
      "path": "4"
    },
    "1057": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1059": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1060": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1061": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1062": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1878
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1064": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1066": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1067": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1068": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1069": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1071": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1072": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1073": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1886
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1074": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1887,
        1897
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1075": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1898
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1076": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1898
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1077": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1078": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1898
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1079": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1898
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1080": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1081": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1898
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1082": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1898
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1083": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1920
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x445"
    },
    "1086": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1920
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1087": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1913,
        1920
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1088": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1913,
        1920
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1089": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1920
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD1B"
    },
    "1092": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        1864,
        1920
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1093": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1864,
        1920
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1100": {
      "op": "SHL"
    },
    "1101": {
      "op": "SUB"
    },
    "1102": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1103": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "AND",
      "path": "4"
    },
    "1104": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1106": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1107": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1108": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1109": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1829
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1111": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1113": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1114": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1115": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1116": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1118": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1119": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1120": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1837
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1121": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1838,
        1848
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1122": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1849
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1123": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1849
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1124": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1849
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1125": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1849
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1126": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1849
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1127": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1849
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1128": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1849
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1129": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1920
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1130": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1920
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1131": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1920
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1132": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1815,
        1920
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1133": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2028,
        2046
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1135": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2028,
        2058
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1136": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2028,
        2058
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1137": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2028,
        2058
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1138": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2028,
        2058
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1139": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2028,
        2058
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1140": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2028,
        2058
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1141": {
      "branch": 34,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2028,
        2063
      ],
      "op": "EQ",
      "path": "4"
    },
    "1142": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2024,
        2114
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1143": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2024,
        2114
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4BD"
    },
    "1146": {
      "branch": 34,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2024,
        2114
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1147": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2086
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 7,
      "value": "0x5"
    },
    "1149": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1150": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1151": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1153": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1154": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "ADD",
      "path": "4"
    },
    "1155": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1156": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1159": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1160": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1161": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1162": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1163": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "1196": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "ADD",
      "path": "4"
    },
    "1197": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1198": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1205": {
      "op": "SHL"
    },
    "1206": {
      "op": "SUB"
    },
    "1207": {
      "op": "NOT"
    },
    "1208": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "AND",
      "path": "4"
    },
    "1209": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2092,
        2102
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1210": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "OR",
      "path": "4"
    },
    "1211": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1212": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2079,
        2103
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1213": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2024,
        2114
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1214": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1400,
        2120
      ],
      "op": "POP",
      "path": "4"
    },
    "1215": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1400,
        2120
      ],
      "op": "POP",
      "path": "4"
    },
    "1216": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "o",
      "offset": [
        1400,
        2120
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1217": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        4992,
        5094
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1218": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1220": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1227": {
      "op": "SHL"
    },
    "1228": {
      "op": "SUB"
    },
    "1229": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1230": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 8
    },
    "1231": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1232": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EB"
    },
    "1235": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1236": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1238": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1239": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1245": {
      "op": "SHL"
    },
    "1246": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1247": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1248": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1250": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1251": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "1254": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1255": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD33"
    },
    "1258": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1259": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1260": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5074
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x4"
    },
    "1262": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1263": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1264": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1266": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1267": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "ADD",
      "path": "4"
    },
    "1268": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1269": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1272": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1273": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1274": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1275": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1276": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "1309": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "ADD",
      "path": "4"
    },
    "1310": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1311": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1318": {
      "op": "SHL"
    },
    "1319": {
      "op": "SUB"
    },
    "1320": {
      "op": "NOT"
    },
    "1321": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "AND",
      "path": "4"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1328": {
      "op": "SHL"
    },
    "1329": {
      "op": "SUB"
    },
    "1330": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1331": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1332": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1333": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "AND",
      "path": "4"
    },
    "1334": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1335": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1336": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1337": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "OR",
      "path": "4"
    },
    "1338": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1339": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5061,
        5087
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1340": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "o",
      "offset": [
        4992,
        5094
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1341": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2126,
        2480
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1348": {
      "op": "SHL"
    },
    "1349": {
      "op": "SUB"
    },
    "1350": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2221
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1351": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2221
      ],
      "op": "AND",
      "path": "4"
    },
    "1352": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2181,
        2196
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1354": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2221
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1355": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2221
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1356": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2221
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1357": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2213
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1359": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2221
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1361": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2221
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1362": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2221
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1363": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2221
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1364": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2221
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1366": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2221
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1367": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2221
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1368": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2221
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1369": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2222,
        2232
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1370": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2233
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1371": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2233
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1372": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2233
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1373": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2233
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1374": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2233
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1375": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2233
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1376": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2233
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1377": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2199,
        2233
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1378": {
      "branch": 35,
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2251,
        2262
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 10
    },
    "1379": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2243,
        2294
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5AE"
    },
    "1382": {
      "branch": 35,
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2243,
        2294
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1383": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2243,
        2294
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1385": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2243,
        2294
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1386": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1392": {
      "op": "SHL"
    },
    "1393": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2243,
        2294
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1394": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2243,
        2294
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1397": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2243,
        2294
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1399": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2243,
        2294
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1400": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2243,
        2294
      ],
      "op": "ADD",
      "path": "4"
    },
    "1401": {
      "op": "MSTORE"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1406": {
      "op": "DUP3"
    },
    "1407": {
      "op": "ADD"
    },
    "1408": {
      "op": "MSTORE"
    },
    "1409": {
      "op": "PUSH32",
      "value": "0x5374616B696E672062616C616E63652063616E6E6F7420626520300000000000"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1444": {
      "op": "DUP3"
    },
    "1445": {
      "op": "ADD"
    },
    "1446": {
      "op": "MSTORE"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1449": {
      "op": "ADD"
    },
    "1450": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2243,
        2294
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x341"
    },
    "1453": {
      "op": "JUMP"
    },
    "1454": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2243,
        2294
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1455": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x40"
    },
    "1457": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1458": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1467": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1468": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2328,
        2338
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1469": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1471": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1472": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "ADD",
      "path": "4"
    },
    "1473": {
      "op": "MSTORE"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1476": {
      "op": "DUP2"
    },
    "1477": {
      "op": "ADD"
    },
    "1478": {
      "op": "DUP3"
    },
    "1479": {
      "op": "SWAP1"
    },
    "1480": {
      "op": "MSTORE"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1487": {
      "op": "SHL"
    },
    "1488": {
      "op": "SUB"
    },
    "1489": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2327
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1490": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2327
      ],
      "op": "AND",
      "path": "4"
    },
    "1491": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2327
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1492": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2327
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1497": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2327
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1500": {
      "op": "ADD"
    },
    "1501": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1503": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1505": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1506": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1507": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1508": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "SUB",
      "path": "4"
    },
    "1509": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1510": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1512": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1513": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "GAS",
      "path": "4"
    },
    "1514": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "CALL",
      "path": "4"
    },
    "1515": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1516": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1517": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1518": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5FB"
    },
    "1521": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1522": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1523": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1525": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1526": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1527": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1528": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1530": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1531": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1532": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "POP",
      "path": "4"
    },
    "1533": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "POP",
      "path": "4"
    },
    "1534": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "POP",
      "path": "4"
    },
    "1535": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "POP",
      "path": "4"
    },
    "1536": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1538": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1539": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1540": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1542": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "NOT",
      "path": "4"
    },
    "1543": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1545": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1546": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "ADD",
      "path": "4"
    },
    "1547": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "AND",
      "path": "4"
    },
    "1548": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1549": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "ADD",
      "path": "4"
    },
    "1550": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1551": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1553": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1554": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "POP",
      "path": "4"
    },
    "1555": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1556": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "ADD",
      "path": "4"
    },
    "1557": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1558": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x61F"
    },
    "1561": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1562": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1563": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE3"
    },
    "1566": {
      "fn": "TokenFarm.ustakeTokens",
      "jump": "i",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1567": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2304,
        2348
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "op": "SUB"
    },
    "1577": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2380
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 12
    },
    "1578": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2380
      ],
      "op": "AND",
      "path": "4"
    },
    "1579": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2395,
        2396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1581": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2380
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1582": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2380
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1583": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2380
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1584": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2372
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1586": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2380
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1588": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2380
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1589": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2380
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1590": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2380
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1591": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2380
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1593": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2380
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1594": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2380
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1595": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2380
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1596": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2381,
        2391
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1597": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2392
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1598": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2392
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1599": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2392
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1600": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2392
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1601": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2392
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1602": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2392
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1603": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2392
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1604": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2396
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1605": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2396
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1606": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2396
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1607": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2439,
        2457
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 13,
      "value": "0x2"
    },
    "1609": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2439,
        2469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1610": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2439,
        2469
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1611": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2439,
        2469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1612": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2439,
        2469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1613": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2439,
        2469
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1614": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2439,
        2469
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1615": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2439,
        2469
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1616": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2439,
        2473
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x659"
    },
    "1619": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2439,
        2473
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1620": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2358,
        2372
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1621": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2439,
        2473
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD68"
    },
    "1624": {
      "fn": "TokenFarm.ustakeTokens",
      "jump": "i",
      "offset": [
        2439,
        2473
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1625": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2439,
        2473
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1626": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2425,
        2435
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1627": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2406,
        2436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1629": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2406,
        2436
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1630": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2406,
        2436
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1631": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2406,
        2436
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1632": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2406,
        2424
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1634": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2406,
        2436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1636": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2406,
        2436
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1637": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2406,
        2436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1639": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2406,
        2436
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1640": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2406,
        2436
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1641": {
      "fn": "TokenFarm.ustakeTokens",
      "offset": [
        2406,
        2473
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1642": {
      "op": "POP"
    },
    "1643": {
      "op": "POP"
    },
    "1644": {
      "fn": "TokenFarm.ustakeTokens",
      "jump": "o",
      "offset": [
        2126,
        2480
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1645": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "op": "SUB"
    },
    "1654": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3874,
        3901
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1655": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3874,
        3901
      ],
      "op": "AND",
      "path": "4"
    },
    "1656": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3847,
        3854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1658": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3874,
        3901
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1659": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3874,
        3901
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1660": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3874,
        3901
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1661": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3874,
        3892
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1663": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3874,
        3901
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1665": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3874,
        3901
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1666": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3874,
        3901
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1668": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3874,
        3901
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1669": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3874,
        3901
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1670": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3874,
        3901
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1671": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3870,
        4083
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x692"
    },
    "1674": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3870,
        4083
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1675": {
      "op": "POP"
    },
    "1676": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4071,
        4072
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 14,
      "value": "0x0"
    },
    "1678": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4064,
        4072
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6F1"
    },
    "1681": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4064,
        4072
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1682": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3870,
        4083
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1683": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4094,
        4107
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1685": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4109,
        4125
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1686": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4129,
        4150
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x69E"
    },
    "1689": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4143,
        4149
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1690": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4129,
        4142
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D2"
    },
    "1693": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        4129,
        4150
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1694": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4129,
        4150
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1695": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4093,
        4150
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1696": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4093,
        4150
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1697": {
      "op": "POP"
    },
    "1698": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4093,
        4150
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4160,
        4183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1702": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4243,
        4255
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6B0"
    },
    "1705": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4093,
        4150
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1706": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4243,
        4245
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "1708": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4243,
        4255
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE63"
    },
    "1711": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        4243,
        4255
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1712": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4243,
        4255
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1719": {
      "op": "SHL"
    },
    "1720": {
      "op": "SUB"
    },
    "1721": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1722": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1723": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "AND",
      "path": "4"
    },
    "1724": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1726": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1727": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1728": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1729": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4201
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1731": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1733": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1734": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1735": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1736": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1738": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1739": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1740": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4209
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1741": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4218
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1742": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4218
      ],
      "op": "DUP12",
      "path": "4"
    },
    "1743": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4218
      ],
      "op": "AND",
      "path": "4"
    },
    "1744": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4218
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1745": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4218
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1746": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4218
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1747": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4218
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1748": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4218
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1749": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4218
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1750": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4218
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1751": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4226
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E1"
    },
    "1754": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4226
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1755": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4221,
        4226
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1756": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4221,
        4226
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1757": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4226
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE6F"
    },
    "1760": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        4187,
        4226
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1761": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4187,
        4226
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1762": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4186,
        4256
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6EB"
    },
    "1765": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4186,
        4256
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1766": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4186,
        4256
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1767": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4186,
        4256
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE8E"
    },
    "1770": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        4186,
        4256
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1771": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4186,
        4256
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1772": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4160,
        4256
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1773": {
      "op": "POP"
    },
    "1774": {
      "op": "POP"
    },
    "1775": {
      "op": "POP"
    },
    "1776": {
      "op": "POP"
    },
    "1777": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1778": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1779": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1780": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "POP",
      "path": "4"
    },
    "1781": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        3736,
        4295
      ],
      "op": "POP",
      "path": "4"
    },
    "1782": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "o",
      "offset": [
        3736,
        4295
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1783": {
      "offset": [
        696,
        726
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1784": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1786": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1787": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1788": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1789": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1790": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "LT",
      "path": "4"
    },
    "1791": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x707"
    },
    "1794": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1795": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1797": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1798": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1799": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1800": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1802": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1803": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1804": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1805": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1807": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1808": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1809": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1810": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "ADD",
      "path": "4"
    },
    "1811": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1818": {
      "op": "SHL"
    },
    "1819": {
      "op": "SUB"
    },
    "1820": {
      "offset": [
        696,
        726
      ],
      "op": "AND",
      "path": "4"
    },
    "1821": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        696,
        726
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1822": {
      "op": "POP"
    },
    "1823": {
      "offset": [
        696,
        726
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1824": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "o",
      "offset": [
        696,
        726
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1825": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2486,
        3111
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1826": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1828": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1835": {
      "op": "SHL"
    },
    "1836": {
      "op": "SUB"
    },
    "1837": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1838": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1839": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1840": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74B"
    },
    "1843": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1844": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1846": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1847": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1853": {
      "op": "SHL"
    },
    "1854": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1855": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1856": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1858": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1859": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "1862": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1863": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD33"
    },
    "1866": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1867": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1868": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2541,
        2557
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1870": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2536,
        3105
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1871": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2574,
        2581
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "1873": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2574,
        2588
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1874": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2563,
        2588
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1875": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2563,
        2588
      ],
      "op": "LT",
      "path": "4"
    },
    "1876": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2536,
        3105
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1877": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2536,
        3105
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x81B"
    },
    "1880": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2536,
        3105
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1881": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2616,
        2633
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1883": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2643
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "1885": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2644,
        2652
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1886": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1887": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1888": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1889": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "LT",
      "path": "4"
    },
    "1890": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x76D"
    },
    "1893": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1894": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x76D"
    },
    "1897": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEB0"
    },
    "1900": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        2636,
        2653
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1901": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1902": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1904": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1905": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1906": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1907": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1909": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1910": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1911": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "ADD",
      "path": "4"
    },
    "1912": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "op": "SUB"
    },
    "1921": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "AND",
      "path": "4"
    },
    "1922": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1923": {
      "op": "POP"
    },
    "1924": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2882,
        2912
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x78C"
    },
    "1927": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2636,
        2653
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1928": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2882,
        2901
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x916"
    },
    "1931": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        2882,
        2912
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1932": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2882,
        2912
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1933": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3056
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 15,
      "value": "0x6"
    },
    "1935": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3056
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1936": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1938": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1939": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1946": {
      "op": "SHL"
    },
    "1947": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1948": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1955": {
      "op": "SHL"
    },
    "1956": {
      "op": "SUB"
    },
    "1957": {
      "op": "DUP6"
    },
    "1958": {
      "op": "DUP2"
    },
    "1959": {
      "op": "AND"
    },
    "1960": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1962": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1963": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "ADD",
      "path": "4"
    },
    "1964": {
      "op": "MSTORE"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1967": {
      "op": "DUP3"
    },
    "1968": {
      "op": "ADD"
    },
    "1969": {
      "op": "DUP5"
    },
    "1970": {
      "op": "SWAP1"
    },
    "1971": {
      "op": "MSTORE"
    },
    "1972": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2855,
        2912
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1973": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2855,
        2912
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1974": {
      "op": "POP"
    },
    "1975": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3056
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1976": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3056
      ],
      "op": "AND",
      "path": "4"
    },
    "1977": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3056
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1978": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3065
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1983": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3065
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1986": {
      "op": "ADD"
    },
    "1987": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1989": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1991": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1992": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1993": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1994": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "SUB",
      "path": "4"
    },
    "1995": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1996": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1998": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1999": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "GAS",
      "path": "4"
    },
    "2000": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "CALL",
      "path": "4"
    },
    "2001": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2002": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2003": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2004": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7E1"
    },
    "2007": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2008": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2009": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2011": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2012": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2013": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2014": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2016": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2017": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2018": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "POP",
      "path": "4"
    },
    "2019": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "POP",
      "path": "4"
    },
    "2020": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "POP",
      "path": "4"
    },
    "2021": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "POP",
      "path": "4"
    },
    "2022": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2024": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2025": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2026": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2028": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "NOT",
      "path": "4"
    },
    "2029": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2031": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2032": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "ADD",
      "path": "4"
    },
    "2033": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "AND",
      "path": "4"
    },
    "2034": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2035": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "ADD",
      "path": "4"
    },
    "2036": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2037": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2039": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2040": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "POP",
      "path": "4"
    },
    "2041": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2042": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "ADD",
      "path": "4"
    },
    "2043": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2044": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x805"
    },
    "2047": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2048": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2049": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE3"
    },
    "2052": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        3047,
        3094
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2053": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2054": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3047,
        3094
      ],
      "op": "POP",
      "path": "4"
    },
    "2055": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2602,
        3105
      ],
      "op": "POP",
      "path": "4"
    },
    "2056": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2602,
        3105
      ],
      "op": "POP",
      "path": "4"
    },
    "2057": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2590,
        2600
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 16
    },
    "2058": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2590,
        2600
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2059": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2590,
        2600
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x813"
    },
    "2062": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2590,
        2600
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2063": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2590,
        2600
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEC6"
    },
    "2066": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        2590,
        2600
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2067": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2590,
        2600
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2068": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2590,
        2600
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2069": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2590,
        2600
      ],
      "op": "POP",
      "path": "4"
    },
    "2070": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2590,
        2600
      ],
      "op": "POP",
      "path": "4"
    },
    "2071": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2536,
        3105
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x74E"
    },
    "2074": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2536,
        3105
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2075": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2536,
        3105
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2076": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2536,
        3105
      ],
      "op": "POP",
      "path": "4"
    },
    "2077": {
      "fn": "TokenFarm.issueTokens",
      "jump": "o",
      "offset": [
        2486,
        3111
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2078": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2079": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2081": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2088": {
      "op": "SHL"
    },
    "2089": {
      "op": "SUB"
    },
    "2090": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2091": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2092": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2093": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x848"
    },
    "2096": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2097": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2099": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2100": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2106": {
      "op": "SHL"
    },
    "2107": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2108": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2109": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2111": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2112": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "2115": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2116": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD33"
    },
    "2119": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2120": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2121": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x852"
    },
    "2124": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2126": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE6"
    },
    "2129": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2130": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2131": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2132": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1093,
        1255
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2133": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2135": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2142": {
      "op": "SHL"
    },
    "2143": {
      "op": "SUB"
    },
    "2144": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2145": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2146": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2147": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87E"
    },
    "2150": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2151": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2153": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2160": {
      "op": "SHL"
    },
    "2161": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2162": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2163": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2165": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2166": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "2169": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2170": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD33"
    },
    "2173": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2174": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2181": {
      "op": "SHL"
    },
    "2182": {
      "op": "SUB"
    },
    "2183": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1235
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 18
    },
    "2184": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1235
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2185": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1235
      ],
      "op": "AND",
      "path": "4"
    },
    "2186": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1235
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2188": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1235
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2189": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1235
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2190": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1235
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2191": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1227
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2193": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1235
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2195": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1235
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2196": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1235
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2198": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1235
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2199": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1235
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2200": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1248
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2201": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1248
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2208": {
      "op": "SHL"
    },
    "2209": {
      "op": "SUB"
    },
    "2210": {
      "op": "NOT"
    },
    "2211": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1248
      ],
      "op": "AND",
      "path": "4"
    },
    "2212": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1248
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2213": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2214": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1248
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2215": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1248
      ],
      "op": "AND",
      "path": "4"
    },
    "2216": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1248
      ],
      "op": "OR",
      "path": "4"
    },
    "2217": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2218": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1206,
        1248
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2219": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "o",
      "offset": [
        1093,
        1255
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2220": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2221": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5156,
        5160
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2223": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5156,
        5160
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2224": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5172,
        5331
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2225": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5200,
        5213
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2227": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5200,
        5220
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2228": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5194,
        5220
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2229": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5194,
        5220
      ],
      "op": "LT",
      "path": "4"
    },
    "2230": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5172,
        5331
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2231": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5172,
        5331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x90D"
    },
    "2234": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5172,
        5331
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2235": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5269,
        5275
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2242": {
      "op": "SHL"
    },
    "2243": {
      "op": "SUB"
    },
    "2244": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5275
      ],
      "op": "AND",
      "path": "4"
    },
    "2245": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5260
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2247": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5261,
        5264
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2248": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2249": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2250": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2251": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "LT",
      "path": "4"
    },
    "2252": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8D7"
    },
    "2255": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2256": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8D7"
    },
    "2259": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEB0"
    },
    "2262": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5247,
        5265
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2263": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2264": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2266": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2267": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2268": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2269": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2271": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2272": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2273": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2274": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "ADD",
      "path": "4"
    },
    "2275": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2282": {
      "op": "SHL"
    },
    "2283": {
      "op": "SUB"
    },
    "2284": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5265
      ],
      "op": "AND",
      "path": "4"
    },
    "2285": {
      "branch": 36,
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5247,
        5275
      ],
      "op": "EQ",
      "path": "4"
    },
    "2286": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5243,
        5321
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2287": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5243,
        5321
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8FB"
    },
    "2290": {
      "branch": 36,
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5243,
        5321
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2291": {
      "op": "POP"
    },
    "2292": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5302,
        5306
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 19,
      "value": "0x1"
    },
    "2294": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5302,
        5306
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2295": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2296": {
      "op": "POP"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "o",
      "offset": [
        5100,
        5359
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2299": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5243,
        5321
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2300": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5222,
        5227
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 20
    },
    "2301": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5222,
        5227
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x905"
    },
    "2304": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5222,
        5227
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2305": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5222,
        5227
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEC6"
    },
    "2308": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5222,
        5227
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2309": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5222,
        5227
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2310": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5222,
        5227
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2311": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5222,
        5227
      ],
      "op": "POP",
      "path": "4"
    },
    "2312": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5222,
        5227
      ],
      "op": "POP",
      "path": "4"
    },
    "2313": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5172,
        5331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8B0"
    },
    "2316": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5172,
        5331
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2317": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5172,
        5331
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2318": {
      "op": "POP"
    },
    "2319": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5347,
        5352
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 21,
      "value": "0x0"
    },
    "2321": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5347,
        5352
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2322": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5100,
        5359
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2323": {
      "op": "POP"
    },
    "2324": {
      "op": "POP"
    },
    "2325": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "o",
      "offset": [
        5100,
        5359
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2326": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3117,
        3730
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2333": {
      "op": "SHL"
    },
    "2334": {
      "op": "SUB"
    },
    "2335": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3278,
        3312
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 22
    },
    "2336": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3278,
        3312
      ],
      "op": "AND",
      "path": "4"
    },
    "2337": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3215,
        3222
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2339": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3278,
        3312
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2340": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3278,
        3312
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2341": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3278,
        3312
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2342": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3278,
        3296
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2344": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3278,
        3312
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2346": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3278,
        3312
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2347": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3278,
        3312
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2349": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3278,
        3312
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2350": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3278,
        3312
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2351": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3278,
        3312
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2352": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3215,
        3222
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2353": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3215,
        3222
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2354": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3270,
        3336
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x96F"
    },
    "2357": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3270,
        3336
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2358": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3270,
        3336
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2360": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3270,
        3336
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2367": {
      "op": "SHL"
    },
    "2368": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3270,
        3336
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2369": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3270,
        3336
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2372": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3270,
        3336
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2374": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3270,
        3336
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2375": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3270,
        3336
      ],
      "op": "ADD",
      "path": "4"
    },
    "2376": {
      "op": "MSTORE"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2381": {
      "op": "DUP3"
    },
    "2382": {
      "op": "ADD"
    },
    "2383": {
      "op": "MSTORE"
    },
    "2384": {
      "op": "PUSH15",
      "value": "0x4E6F7468696E67207374616B656421"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2402": {
      "op": "SHL"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2405": {
      "op": "DUP3"
    },
    "2406": {
      "op": "ADD"
    },
    "2407": {
      "op": "MSTORE"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2410": {
      "op": "ADD"
    },
    "2411": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3270,
        3336
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x341"
    },
    "2414": {
      "op": "JUMP"
    },
    "2415": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3270,
        3336
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2416": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3364,
        3387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2418": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3346,
        3697
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2419": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3423,
        3436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2421": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3423,
        3443
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2422": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3405,
        3443
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2423": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3405,
        3443
      ],
      "op": "LT",
      "path": "4"
    },
    "2424": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3346,
        3697
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2425": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3346,
        3697
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9CB"
    },
    "2428": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3346,
        3697
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2429": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3557,
        3686
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 23,
      "value": "0x9AD"
    },
    "2432": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3602,
        3616
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2433": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3651
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2435": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3652,
        3667
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2436": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2437": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2438": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2439": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "LT",
      "path": "4"
    },
    "2440": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x993"
    },
    "2443": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2444": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x993"
    },
    "2447": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEB0"
    },
    "2450": {
      "fn": "TokenFarm.getStakerTotalValue",
      "jump": "i",
      "offset": [
        3638,
        3668
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2451": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2452": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2454": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2455": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2456": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2457": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2459": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2460": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2461": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2462": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "ADD",
      "path": "4"
    },
    "2463": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2470": {
      "op": "SHL"
    },
    "2471": {
      "op": "SUB"
    },
    "2472": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3638,
        3668
      ],
      "op": "AND",
      "path": "4"
    },
    "2473": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3557,
        3580
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x66D"
    },
    "2476": {
      "fn": "TokenFarm.getStakerTotalValue",
      "jump": "i",
      "offset": [
        3557,
        3686
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2477": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3557,
        3686
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2478": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3528,
        3686
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9B7"
    },
    "2481": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3528,
        3686
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2482": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3528,
        3538
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2483": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3528,
        3686
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD1B"
    },
    "2486": {
      "fn": "TokenFarm.getStakerTotalValue",
      "jump": "i",
      "offset": [
        3528,
        3686
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2487": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3528,
        3686
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2488": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3499,
        3686
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2489": {
      "op": "POP"
    },
    "2490": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3457,
        3474
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 24
    },
    "2491": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3457,
        3474
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9C3"
    },
    "2494": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3457,
        3474
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2495": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3457,
        3474
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEC6"
    },
    "2498": {
      "fn": "TokenFarm.getStakerTotalValue",
      "jump": "i",
      "offset": [
        3457,
        3474
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2499": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3457,
        3474
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2500": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3457,
        3474
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2501": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3457,
        3474
      ],
      "op": "POP",
      "path": "4"
    },
    "2502": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3457,
        3474
      ],
      "op": "POP",
      "path": "4"
    },
    "2503": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3346,
        3697
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x972"
    },
    "2506": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3346,
        3697
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2507": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3346,
        3697
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2508": {
      "op": "POP"
    },
    "2509": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3713,
        3723
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 25
    },
    "2510": {
      "fn": "TokenFarm.getStakerTotalValue",
      "offset": [
        3117,
        3730
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2511": {
      "op": "POP"
    },
    "2512": {
      "op": "POP"
    },
    "2513": {
      "fn": "TokenFarm.getStakerTotalValue",
      "jump": "o",
      "offset": [
        3117,
        3730
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2514": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4301,
        4748
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2521": {
      "op": "SHL"
    },
    "2522": {
      "op": "SUB"
    },
    "2523": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2524": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2525": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "AND",
      "path": "4"
    },
    "2526": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4385,
        4392
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2528": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2529": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2530": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2531": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4465
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2533": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2535": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2536": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2538": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2539": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2540": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2541": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2542": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2543": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2544": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2551": {
      "op": "SHL"
    },
    "2552": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2553": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2554": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2555": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2556": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4385,
        4392
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2557": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4385,
        4392
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2558": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4385,
        4392
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2559": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4385,
        4392
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2560": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2561": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "AND",
      "path": "4"
    },
    "2562": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2563": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2564": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2565": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4385,
        4392
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2566": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4385,
        4392
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2567": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2568": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2569": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4638
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFEAF968C"
    },
    "2574": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4638
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2575": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2577": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2578": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2579": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "ADD",
      "path": "4"
    },
    "2580": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2581": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "2583": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2584": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2585": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2586": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2587": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2588": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2589": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "SUB",
      "path": "4"
    },
    "2590": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "ADD",
      "path": "4"
    },
    "2591": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2592": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4444,
        4473
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2593": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "GAS",
      "path": "4"
    },
    "2594": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "2595": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2596": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2597": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2598": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA33"
    },
    "2601": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2602": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2603": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2605": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2606": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2607": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2608": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2610": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2611": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2612": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "POP",
      "path": "4"
    },
    "2613": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "POP",
      "path": "4"
    },
    "2614": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "POP",
      "path": "4"
    },
    "2615": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "POP",
      "path": "4"
    },
    "2616": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2618": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2619": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2620": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2622": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "NOT",
      "path": "4"
    },
    "2623": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2625": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2626": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "ADD",
      "path": "4"
    },
    "2627": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "AND",
      "path": "4"
    },
    "2628": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2629": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "ADD",
      "path": "4"
    },
    "2630": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2631": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2633": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2634": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "POP",
      "path": "4"
    },
    "2635": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2636": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "ADD",
      "path": "4"
    },
    "2637": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2638": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA57"
    },
    "2641": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2642": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2643": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEFB"
    },
    "2646": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        4613,
        4640
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2647": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4613,
        4640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2648": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4588,
        4640
      ],
      "op": "POP",
      "path": "4"
    },
    "2649": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4588,
        4640
      ],
      "op": "POP",
      "path": "4"
    },
    "2650": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4588,
        4640
      ],
      "op": "POP",
      "path": "4"
    },
    "2651": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4588,
        4640
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2652": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4588,
        4640
      ],
      "op": "POP",
      "path": "4"
    },
    "2653": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4588,
        4640
      ],
      "op": "POP",
      "path": "4"
    },
    "2654": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4650,
        4666
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2656": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4686
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2663": {
      "op": "SHL"
    },
    "2664": {
      "op": "SUB"
    },
    "2665": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4695
      ],
      "op": "AND",
      "path": "4"
    },
    "2666": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4695
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "2671": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2673": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2674": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2675": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "2680": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "AND",
      "path": "4"
    },
    "2681": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "2683": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "SHL",
      "path": "4"
    },
    "2684": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2685": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2686": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2688": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "ADD",
      "path": "4"
    },
    "2689": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2691": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2693": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2694": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2695": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2696": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "SUB",
      "path": "4"
    },
    "2697": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2698": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2699": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "GAS",
      "path": "4"
    },
    "2700": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "2701": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2702": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2703": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2704": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA9D"
    },
    "2707": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2708": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2709": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2711": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2712": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2713": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2714": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2716": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2717": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2718": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "POP",
      "path": "4"
    },
    "2719": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "POP",
      "path": "4"
    },
    "2720": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "POP",
      "path": "4"
    },
    "2721": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "POP",
      "path": "4"
    },
    "2722": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2724": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2725": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2726": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2728": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "NOT",
      "path": "4"
    },
    "2729": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2731": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2732": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "ADD",
      "path": "4"
    },
    "2733": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "AND",
      "path": "4"
    },
    "2734": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2735": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "ADD",
      "path": "4"
    },
    "2736": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2737": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2739": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2740": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "POP",
      "path": "4"
    },
    "2741": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2742": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "ADD",
      "path": "4"
    },
    "2743": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2744": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAC1"
    },
    "2747": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2748": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2749": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF4B"
    },
    "2752": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        4677,
        4697
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2753": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4677,
        4697
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2754": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4724,
        4729
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 26
    },
    "2755": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4724,
        4729
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "2756": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4669,
        4698
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "2758": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4669,
        4698
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2759": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4669,
        4698
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2760": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4669,
        4698
      ],
      "op": "AND",
      "path": "4"
    },
    "2761": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4669,
        4698
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "2762": {
      "op": "POP"
    },
    "2763": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4724,
        4729
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2764": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        4724,
        4729
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2765": {
      "op": "POP"
    },
    "2766": {
      "op": "POP"
    },
    "2767": {
      "op": "POP"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "op": "POP"
    },
    "2770": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "o",
      "offset": [
        4301,
        4748
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2772": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2774": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2781": {
      "op": "SHL"
    },
    "2782": {
      "op": "SUB"
    },
    "2783": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2784": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2785": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2786": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFD"
    },
    "2789": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2790": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2792": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2793": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2799": {
      "op": "SHL"
    },
    "2800": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2801": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2802": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2804": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2805": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "2808": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2809": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD33"
    },
    "2812": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2813": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2820": {
      "op": "SHL"
    },
    "2821": {
      "op": "SUB"
    },
    "2822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 27
    },
    "2823": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "2824": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB62"
    },
    "2827": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2837": {
      "op": "SHL"
    },
    "2838": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2844": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "2846": {
      "op": "MSTORE"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2851": {
      "op": "DUP3"
    },
    "2852": {
      "op": "ADD"
    },
    "2853": {
      "op": "MSTORE"
    },
    "2854": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2889": {
      "op": "DUP3"
    },
    "2890": {
      "op": "ADD"
    },
    "2891": {
      "op": "MSTORE"
    },
    "2892": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2901": {
      "op": "SHL"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2904": {
      "op": "DUP3"
    },
    "2905": {
      "op": "ADD"
    },
    "2906": {
      "op": "MSTORE"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2909": {
      "op": "ADD"
    },
    "2910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "2913": {
      "op": "JUMP"
    },
    "2914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0x81B"
    },
    "2918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2919": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE6"
    },
    "2922": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2923": {
      "offset": [
        755,
        779
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2926": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2928": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2929": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2930": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "LT",
      "path": "4"
    },
    "2931": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x707"
    },
    "2934": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2935": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2938": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        755,
        779
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2939": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4754,
        4986
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2946": {
      "op": "SHL"
    },
    "2947": {
      "op": "SUB"
    },
    "2948": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2949": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2950": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "AND",
      "path": "4"
    },
    "2951": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4891,
        4892
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2953": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2954": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2955": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2956": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4870
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2958": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2960": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2961": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2962": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2963": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2965": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2966": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2967": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4878
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2968": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4887
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2969": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4887
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2970": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4887
      ],
      "op": "AND",
      "path": "4"
    },
    "2971": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4887
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2972": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4887
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2973": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4887
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2974": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4887
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2975": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4887
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2976": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4887
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2977": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4856,
        4887
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2978": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4852,
        4980
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4BD"
    },
    "2981": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4852,
        4980
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2988": {
      "op": "SHL"
    },
    "2989": {
      "op": "SUB"
    },
    "2990": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4965
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 29
    },
    "2991": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4965
      ],
      "op": "AND",
      "path": "4"
    },
    "2992": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2994": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4965
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2995": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4965
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2996": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4965
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2997": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4956
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2999": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3001": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4965
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3002": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3004": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4965
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3005": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4965
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3006": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4965
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3007": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4969
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBC9"
    },
    "3010": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4969
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3011": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4968,
        4969
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3013": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4969
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD1B"
    },
    "3016": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "jump": "i",
      "offset": [
        4938,
        4969
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3017": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4938,
        4969
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3024": {
      "op": "SHL"
    },
    "3025": {
      "op": "SUB"
    },
    "3026": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4908,
        4935
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3027": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4908,
        4935
      ],
      "op": "AND",
      "path": "4"
    },
    "3028": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4908,
        4935
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3030": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4908,
        4935
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3031": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4908,
        4935
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3032": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4908,
        4935
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3033": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4908,
        4926
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3035": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4908,
        4935
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3037": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4908,
        4935
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3038": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4908,
        4935
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3040": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4908,
        4935
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3041": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4908,
        4935
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3042": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4908,
        4969
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3043": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4754,
        4986
      ],
      "op": "POP",
      "path": "4"
    },
    "3044": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        4754,
        4986
      ],
      "op": "POP",
      "path": "4"
    },
    "3045": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "jump": "o",
      "offset": [
        4754,
        4986
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3046": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3047": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3049": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3050": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3057": {
      "op": "SHL"
    },
    "3058": {
      "op": "SUB"
    },
    "3059": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 30
    },
    "3060": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3061": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3068": {
      "op": "SHL"
    },
    "3069": {
      "op": "SUB"
    },
    "3070": {
      "op": "NOT"
    },
    "3071": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3072": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3073": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3074": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "3075": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3076": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3077": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x40"
    },
    "3079": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3080": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3081": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3082": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3083": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "3084": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3085": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3086": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3087": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3120": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3121": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3122": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3123": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3124": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3125": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3126": {
      "op": "JUMPDEST"
    },
    "3127": {
      "op": "DUP1"
    },
    "3128": {
      "op": "CALLDATALOAD"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3135": {
      "op": "SHL"
    },
    "3136": {
      "op": "SUB"
    },
    "3137": {
      "op": "DUP2"
    },
    "3138": {
      "op": "AND"
    },
    "3139": {
      "op": "DUP2"
    },
    "3140": {
      "op": "EQ"
    },
    "3141": {
      "op": "PUSH2",
      "value": "0xC4D"
    },
    "3144": {
      "op": "JUMPI"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3147": {
      "op": "DUP1"
    },
    "3148": {
      "op": "REVERT"
    },
    "3149": {
      "op": "JUMPDEST"
    },
    "3150": {
      "op": "SWAP2"
    },
    "3151": {
      "op": "SWAP1"
    },
    "3152": {
      "op": "POP"
    },
    "3153": {
      "jump": "o",
      "op": "JUMP"
    },
    "3154": {
      "op": "JUMPDEST"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3157": {
      "op": "DUP1"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3160": {
      "op": "DUP4"
    },
    "3161": {
      "op": "DUP6"
    },
    "3162": {
      "op": "SUB"
    },
    "3163": {
      "op": "SLT"
    },
    "3164": {
      "op": "ISZERO"
    },
    "3165": {
      "op": "PUSH2",
      "value": "0xC65"
    },
    "3168": {
      "op": "JUMPI"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3171": {
      "op": "DUP1"
    },
    "3172": {
      "op": "REVERT"
    },
    "3173": {
      "op": "JUMPDEST"
    },
    "3174": {
      "op": "DUP3"
    },
    "3175": {
      "op": "CALLDATALOAD"
    },
    "3176": {
      "op": "SWAP2"
    },
    "3177": {
      "op": "POP"
    },
    "3178": {
      "op": "PUSH2",
      "value": "0xC75"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3183": {
      "op": "DUP5"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "op": "PUSH2",
      "value": "0xC36"
    },
    "3188": {
      "jump": "i",
      "op": "JUMP"
    },
    "3189": {
      "op": "JUMPDEST"
    },
    "3190": {
      "op": "SWAP1"
    },
    "3191": {
      "op": "POP"
    },
    "3192": {
      "op": "SWAP3"
    },
    "3193": {
      "op": "POP"
    },
    "3194": {
      "op": "SWAP3"
    },
    "3195": {
      "op": "SWAP1"
    },
    "3196": {
      "op": "POP"
    },
    "3197": {
      "jump": "o",
      "op": "JUMP"
    },
    "3198": {
      "op": "JUMPDEST"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3203": {
      "op": "DUP3"
    },
    "3204": {
      "op": "DUP5"
    },
    "3205": {
      "op": "SUB"
    },
    "3206": {
      "op": "SLT"
    },
    "3207": {
      "op": "ISZERO"
    },
    "3208": {
      "op": "PUSH2",
      "value": "0xC90"
    },
    "3211": {
      "op": "JUMPI"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3214": {
      "op": "DUP1"
    },
    "3215": {
      "op": "REVERT"
    },
    "3216": {
      "op": "JUMPDEST"
    },
    "3217": {
      "op": "PUSH2",
      "value": "0xC99"
    },
    "3220": {
      "op": "DUP3"
    },
    "3221": {
      "op": "PUSH2",
      "value": "0xC36"
    },
    "3224": {
      "jump": "i",
      "op": "JUMP"
    },
    "3225": {
      "op": "JUMPDEST"
    },
    "3226": {
      "op": "SWAP4"
    },
    "3227": {
      "op": "SWAP3"
    },
    "3228": {
      "op": "POP"
    },
    "3229": {
      "op": "POP"
    },
    "3230": {
      "op": "POP"
    },
    "3231": {
      "jump": "o",
      "op": "JUMP"
    },
    "3232": {
      "op": "JUMPDEST"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3235": {
      "op": "DUP1"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3238": {
      "op": "DUP4"
    },
    "3239": {
      "op": "DUP6"
    },
    "3240": {
      "op": "SUB"
    },
    "3241": {
      "op": "SLT"
    },
    "3242": {
      "op": "ISZERO"
    },
    "3243": {
      "op": "PUSH2",
      "value": "0xCB3"
    },
    "3246": {
      "op": "JUMPI"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3249": {
      "op": "DUP1"
    },
    "3250": {
      "op": "REVERT"
    },
    "3251": {
      "op": "JUMPDEST"
    },
    "3252": {
      "op": "PUSH2",
      "value": "0xCBC"
    },
    "3255": {
      "op": "DUP4"
    },
    "3256": {
      "op": "PUSH2",
      "value": "0xC36"
    },
    "3259": {
      "jump": "i",
      "op": "JUMP"
    },
    "3260": {
      "op": "JUMPDEST"
    },
    "3261": {
      "op": "SWAP2"
    },
    "3262": {
      "op": "POP"
    },
    "3263": {
      "op": "PUSH2",
      "value": "0xC75"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3268": {
      "op": "DUP5"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "op": "PUSH2",
      "value": "0xC36"
    },
    "3273": {
      "jump": "i",
      "op": "JUMP"
    },
    "3274": {
      "op": "JUMPDEST"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3279": {
      "op": "DUP3"
    },
    "3280": {
      "op": "DUP5"
    },
    "3281": {
      "op": "SUB"
    },
    "3282": {
      "op": "SLT"
    },
    "3283": {
      "op": "ISZERO"
    },
    "3284": {
      "op": "PUSH2",
      "value": "0xCDC"
    },
    "3287": {
      "op": "JUMPI"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3290": {
      "op": "DUP1"
    },
    "3291": {
      "op": "REVERT"
    },
    "3292": {
      "op": "JUMPDEST"
    },
    "3293": {
      "op": "POP"
    },
    "3294": {
      "op": "CALLDATALOAD"
    },
    "3295": {
      "op": "SWAP2"
    },
    "3296": {
      "op": "SWAP1"
    },
    "3297": {
      "op": "POP"
    },
    "3298": {
      "jump": "o",
      "op": "JUMP"
    },
    "3299": {
      "op": "JUMPDEST"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3304": {
      "op": "DUP3"
    },
    "3305": {
      "op": "DUP5"
    },
    "3306": {
      "op": "SUB"
    },
    "3307": {
      "op": "SLT"
    },
    "3308": {
      "op": "ISZERO"
    },
    "3309": {
      "op": "PUSH2",
      "value": "0xCF5"
    },
    "3312": {
      "op": "JUMPI"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3315": {
      "op": "DUP1"
    },
    "3316": {
      "op": "REVERT"
    },
    "3317": {
      "op": "JUMPDEST"
    },
    "3318": {
      "op": "DUP2"
    },
    "3319": {
      "op": "MLOAD"
    },
    "3320": {
      "op": "DUP1"
    },
    "3321": {
      "op": "ISZERO"
    },
    "3322": {
      "op": "ISZERO"
    },
    "3323": {
      "op": "DUP2"
    },
    "3324": {
      "op": "EQ"
    },
    "3325": {
      "op": "PUSH2",
      "value": "0xC99"
    },
    "3328": {
      "op": "JUMPI"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3331": {
      "op": "DUP1"
    },
    "3332": {
      "op": "REVERT"
    },
    "3333": {
      "op": "JUMPDEST"
    },
    "3334": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3341": {
      "op": "SHL"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3344": {
      "op": "MSTORE"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3349": {
      "op": "MSTORE"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3354": {
      "op": "REVERT"
    },
    "3355": {
      "op": "JUMPDEST"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3358": {
      "op": "DUP3"
    },
    "3359": {
      "op": "NOT"
    },
    "3360": {
      "op": "DUP3"
    },
    "3361": {
      "op": "GT"
    },
    "3362": {
      "op": "ISZERO"
    },
    "3363": {
      "op": "PUSH2",
      "value": "0xD2E"
    },
    "3366": {
      "op": "JUMPI"
    },
    "3367": {
      "op": "PUSH2",
      "value": "0xD2E"
    },
    "3370": {
      "op": "PUSH2",
      "value": "0xD05"
    },
    "3373": {
      "jump": "i",
      "op": "JUMP"
    },
    "3374": {
      "op": "JUMPDEST"
    },
    "3375": {
      "op": "POP"
    },
    "3376": {
      "op": "ADD"
    },
    "3377": {
      "op": "SWAP1"
    },
    "3378": {
      "jump": "o",
      "op": "JUMP"
    },
    "3379": {
      "op": "JUMPDEST"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3382": {
      "op": "DUP1"
    },
    "3383": {
      "op": "DUP3"
    },
    "3384": {
      "op": "MSTORE"
    },
    "3385": {
      "op": "DUP2"
    },
    "3386": {
      "op": "DUP2"
    },
    "3387": {
      "op": "ADD"
    },
    "3388": {
      "op": "MSTORE"
    },
    "3389": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3424": {
      "op": "DUP3"
    },
    "3425": {
      "op": "ADD"
    },
    "3426": {
      "op": "MSTORE"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3429": {
      "op": "ADD"
    },
    "3430": {
      "op": "SWAP1"
    },
    "3431": {
      "jump": "o",
      "op": "JUMP"
    },
    "3432": {
      "op": "JUMPDEST"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3435": {
      "op": "DUP3"
    },
    "3436": {
      "op": "DUP3"
    },
    "3437": {
      "op": "LT"
    },
    "3438": {
      "op": "ISZERO"
    },
    "3439": {
      "op": "PUSH2",
      "value": "0xD7A"
    },
    "3442": {
      "op": "JUMPI"
    },
    "3443": {
      "op": "PUSH2",
      "value": "0xD7A"
    },
    "3446": {
      "op": "PUSH2",
      "value": "0xD05"
    },
    "3449": {
      "jump": "i",
      "op": "JUMP"
    },
    "3450": {
      "op": "JUMPDEST"
    },
    "3451": {
      "op": "POP"
    },
    "3452": {
      "op": "SUB"
    },
    "3453": {
      "op": "SWAP1"
    },
    "3454": {
      "jump": "o",
      "op": "JUMP"
    },
    "3455": {
      "op": "JUMPDEST"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3458": {
      "op": "DUP2"
    },
    "3459": {
      "op": "DUP2"
    },
    "3460": {
      "op": "JUMPDEST"
    },
    "3461": {
      "op": "DUP1"
    },
    "3462": {
      "op": "DUP6"
    },
    "3463": {
      "op": "GT"
    },
    "3464": {
      "op": "ISZERO"
    },
    "3465": {
      "op": "PUSH2",
      "value": "0xDBA"
    },
    "3468": {
      "op": "JUMPI"
    },
    "3469": {
      "op": "DUP2"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3472": {
      "op": "NOT"
    },
    "3473": {
      "op": "DIV"
    },
    "3474": {
      "op": "DUP3"
    },
    "3475": {
      "op": "GT"
    },
    "3476": {
      "op": "ISZERO"
    },
    "3477": {
      "op": "PUSH2",
      "value": "0xDA0"
    },
    "3480": {
      "op": "JUMPI"
    },
    "3481": {
      "op": "PUSH2",
      "value": "0xDA0"
    },
    "3484": {
      "op": "PUSH2",
      "value": "0xD05"
    },
    "3487": {
      "jump": "i",
      "op": "JUMP"
    },
    "3488": {
      "op": "JUMPDEST"
    },
    "3489": {
      "op": "DUP1"
    },
    "3490": {
      "op": "DUP6"
    },
    "3491": {
      "op": "AND"
    },
    "3492": {
      "op": "ISZERO"
    },
    "3493": {
      "op": "PUSH2",
      "value": "0xDAD"
    },
    "3496": {
      "op": "JUMPI"
    },
    "3497": {
      "op": "SWAP2"
    },
    "3498": {
      "op": "DUP2"
    },
    "3499": {
      "op": "MUL"
    },
    "3500": {
      "op": "SWAP2"
    },
    "3501": {
      "op": "JUMPDEST"
    },
    "3502": {
      "op": "SWAP4"
    },
    "3503": {
      "op": "DUP5"
    },
    "3504": {
      "op": "SHR"
    },
    "3505": {
      "op": "SWAP4"
    },
    "3506": {
      "op": "SWAP1"
    },
    "3507": {
      "op": "DUP1"
    },
    "3508": {
      "op": "MUL"
    },
    "3509": {
      "op": "SWAP1"
    },
    "3510": {
      "op": "PUSH2",
      "value": "0xD84"
    },
    "3513": {
      "op": "JUMP"
    },
    "3514": {
      "op": "JUMPDEST"
    },
    "3515": {
      "op": "POP"
    },
    "3516": {
      "op": "SWAP3"
    },
    "3517": {
      "op": "POP"
    },
    "3518": {
      "op": "SWAP3"
    },
    "3519": {
      "op": "SWAP1"
    },
    "3520": {
      "op": "POP"
    },
    "3521": {
      "jump": "o",
      "op": "JUMP"
    },
    "3522": {
      "op": "JUMPDEST"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3525": {
      "op": "DUP3"
    },
    "3526": {
      "op": "PUSH2",
      "value": "0xDD1"
    },
    "3529": {
      "op": "JUMPI"
    },
    "3530": {
      "op": "POP"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3533": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "3536": {
      "op": "JUMP"
    },
    "3537": {
      "op": "JUMPDEST"
    },
    "3538": {
      "op": "DUP2"
    },
    "3539": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3542": {
      "op": "JUMPI"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3546": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "3549": {
      "op": "JUMP"
    },
    "3550": {
      "op": "JUMPDEST"
    },
    "3551": {
      "op": "DUP2"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3554": {
      "op": "DUP2"
    },
    "3555": {
      "op": "EQ"
    },
    "3556": {
      "op": "PUSH2",
      "value": "0xDF4"
    },
    "3559": {
      "op": "JUMPI"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3562": {
      "op": "DUP2"
    },
    "3563": {
      "op": "EQ"
    },
    "3564": {
      "op": "PUSH2",
      "value": "0xDFE"
    },
    "3567": {
      "op": "JUMPI"
    },
    "3568": {
      "op": "PUSH2",
      "value": "0xE1A"
    },
    "3571": {
      "op": "JUMP"
    },
    "3572": {
      "op": "JUMPDEST"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3575": {
      "op": "SWAP2"
    },
    "3576": {
      "op": "POP"
    },
    "3577": {
      "op": "POP"
    },
    "3578": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "3581": {
      "op": "JUMP"
    },
    "3582": {
      "op": "JUMPDEST"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3585": {
      "op": "DUP5"
    },
    "3586": {
      "op": "GT"
    },
    "3587": {
      "op": "ISZERO"
    },
    "3588": {
      "op": "PUSH2",
      "value": "0xE0F"
    },
    "3591": {
      "op": "JUMPI"
    },
    "3592": {
      "op": "PUSH2",
      "value": "0xE0F"
    },
    "3595": {
      "op": "PUSH2",
      "value": "0xD05"
    },
    "3598": {
      "jump": "i",
      "op": "JUMP"
    },
    "3599": {
      "op": "JUMPDEST"
    },
    "3600": {
      "op": "POP"
    },
    "3601": {
      "op": "POP"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3604": {
      "op": "DUP3"
    },
    "3605": {
      "op": "SHL"
    },
    "3606": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "3609": {
      "op": "JUMP"
    },
    "3610": {
      "op": "JUMPDEST"
    },
    "3611": {
      "op": "POP"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3614": {
      "op": "DUP4"
    },
    "3615": {
      "op": "LT"
    },
    "3616": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "3619": {
      "op": "DUP4"
    },
    "3620": {
      "op": "LT"
    },
    "3621": {
      "op": "AND"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "3624": {
      "op": "DUP5"
    },
    "3625": {
      "op": "LT"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "3628": {
      "op": "DUP5"
    },
    "3629": {
      "op": "LT"
    },
    "3630": {
      "op": "AND"
    },
    "3631": {
      "op": "OR"
    },
    "3632": {
      "op": "ISZERO"
    },
    "3633": {
      "op": "PUSH2",
      "value": "0xE3D"
    },
    "3636": {
      "op": "JUMPI"
    },
    "3637": {
      "op": "POP"
    },
    "3638": {
      "op": "DUP2"
    },
    "3639": {
      "op": "DUP2"
    },
    "3640": {
      "op": "EXP"
    },
    "3641": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "3644": {
      "op": "JUMP"
    },
    "3645": {
      "op": "JUMPDEST"
    },
    "3646": {
      "op": "PUSH2",
      "value": "0xE47"
    },
    "3649": {
      "op": "DUP4"
    },
    "3650": {
      "op": "DUP4"
    },
    "3651": {
      "op": "PUSH2",
      "value": "0xD7F"
    },
    "3654": {
      "jump": "i",
      "op": "JUMP"
    },
    "3655": {
      "op": "JUMPDEST"
    },
    "3656": {
      "op": "DUP1"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3659": {
      "op": "NOT"
    },
    "3660": {
      "op": "DIV"
    },
    "3661": {
      "op": "DUP3"
    },
    "3662": {
      "op": "GT"
    },
    "3663": {
      "op": "ISZERO"
    },
    "3664": {
      "op": "PUSH2",
      "value": "0xE5B"
    },
    "3667": {
      "op": "JUMPI"
    },
    "3668": {
      "op": "PUSH2",
      "value": "0xE5B"
    },
    "3671": {
      "op": "PUSH2",
      "value": "0xD05"
    },
    "3674": {
      "jump": "i",
      "op": "JUMP"
    },
    "3675": {
      "op": "JUMPDEST"
    },
    "3676": {
      "op": "MUL"
    },
    "3677": {
      "op": "SWAP4"
    },
    "3678": {
      "op": "SWAP3"
    },
    "3679": {
      "op": "POP"
    },
    "3680": {
      "op": "POP"
    },
    "3681": {
      "op": "POP"
    },
    "3682": {
      "jump": "o",
      "op": "JUMP"
    },
    "3683": {
      "op": "JUMPDEST"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3686": {
      "op": "PUSH2",
      "value": "0xC99"
    },
    "3689": {
      "op": "DUP4"
    },
    "3690": {
      "op": "DUP4"
    },
    "3691": {
      "op": "PUSH2",
      "value": "0xDC2"
    },
    "3694": {
      "jump": "i",
      "op": "JUMP"
    },
    "3695": {
      "op": "JUMPDEST"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3698": {
      "op": "DUP2"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3701": {
      "op": "NOT"
    },
    "3702": {
      "op": "DIV"
    },
    "3703": {
      "op": "DUP4"
    },
    "3704": {
      "op": "GT"
    },
    "3705": {
      "op": "DUP3"
    },
    "3706": {
      "op": "ISZERO"
    },
    "3707": {
      "op": "ISZERO"
    },
    "3708": {
      "op": "AND"
    },
    "3709": {
      "op": "ISZERO"
    },
    "3710": {
      "op": "PUSH2",
      "value": "0xE89"
    },
    "3713": {
      "op": "JUMPI"
    },
    "3714": {
      "op": "PUSH2",
      "value": "0xE89"
    },
    "3717": {
      "op": "PUSH2",
      "value": "0xD05"
    },
    "3720": {
      "jump": "i",
      "op": "JUMP"
    },
    "3721": {
      "op": "JUMPDEST"
    },
    "3722": {
      "op": "POP"
    },
    "3723": {
      "op": "MUL"
    },
    "3724": {
      "op": "SWAP1"
    },
    "3725": {
      "jump": "o",
      "op": "JUMP"
    },
    "3726": {
      "op": "JUMPDEST"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3729": {
      "op": "DUP3"
    },
    "3730": {
      "op": "PUSH2",
      "value": "0xEAB"
    },
    "3733": {
      "op": "JUMPI"
    },
    "3734": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3741": {
      "op": "SHL"
    },
    "3742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3744": {
      "op": "MSTORE"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3749": {
      "op": "MSTORE"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3754": {
      "op": "REVERT"
    },
    "3755": {
      "op": "JUMPDEST"
    },
    "3756": {
      "op": "POP"
    },
    "3757": {
      "op": "DIV"
    },
    "3758": {
      "op": "SWAP1"
    },
    "3759": {
      "jump": "o",
      "op": "JUMP"
    },
    "3760": {
      "op": "JUMPDEST"
    },
    "3761": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3768": {
      "op": "SHL"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3771": {
      "op": "MSTORE"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3776": {
      "op": "MSTORE"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3781": {
      "op": "REVERT"
    },
    "3782": {
      "op": "JUMPDEST"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3787": {
      "op": "NOT"
    },
    "3788": {
      "op": "DUP3"
    },
    "3789": {
      "op": "EQ"
    },
    "3790": {
      "op": "ISZERO"
    },
    "3791": {
      "op": "PUSH2",
      "value": "0xEDA"
    },
    "3794": {
      "op": "JUMPI"
    },
    "3795": {
      "op": "PUSH2",
      "value": "0xEDA"
    },
    "3798": {
      "op": "PUSH2",
      "value": "0xD05"
    },
    "3801": {
      "jump": "i",
      "op": "JUMP"
    },
    "3802": {
      "op": "JUMPDEST"
    },
    "3803": {
      "op": "POP"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3806": {
      "op": "ADD"
    },
    "3807": {
      "op": "SWAP1"
    },
    "3808": {
      "jump": "o",
      "op": "JUMP"
    },
    "3809": {
      "op": "JUMPDEST"
    },
    "3810": {
      "op": "DUP1"
    },
    "3811": {
      "op": "MLOAD"
    },
    "3812": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "3823": {
      "op": "DUP2"
    },
    "3824": {
      "op": "AND"
    },
    "3825": {
      "op": "DUP2"
    },
    "3826": {
      "op": "EQ"
    },
    "3827": {
      "op": "PUSH2",
      "value": "0xC4D"
    },
    "3830": {
      "op": "JUMPI"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3833": {
      "op": "DUP1"
    },
    "3834": {
      "op": "REVERT"
    },
    "3835": {
      "op": "JUMPDEST"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3838": {
      "op": "DUP1"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3841": {
      "op": "DUP1"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3846": {
      "op": "DUP7"
    },
    "3847": {
      "op": "DUP9"
    },
    "3848": {
      "op": "SUB"
    },
    "3849": {
      "op": "SLT"
    },
    "3850": {
      "op": "ISZERO"
    },
    "3851": {
      "op": "PUSH2",
      "value": "0xF13"
    },
    "3854": {
      "op": "JUMPI"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3857": {
      "op": "DUP1"
    },
    "3858": {
      "op": "REVERT"
    },
    "3859": {
      "op": "JUMPDEST"
    },
    "3860": {
      "op": "PUSH2",
      "value": "0xF1C"
    },
    "3863": {
      "op": "DUP7"
    },
    "3864": {
      "op": "PUSH2",
      "value": "0xEE1"
    },
    "3867": {
      "jump": "i",
      "op": "JUMP"
    },
    "3868": {
      "op": "JUMPDEST"
    },
    "3869": {
      "op": "SWAP5"
    },
    "3870": {
      "op": "POP"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3873": {
      "op": "DUP7"
    },
    "3874": {
      "op": "ADD"
    },
    "3875": {
      "op": "MLOAD"
    },
    "3876": {
      "op": "SWAP4"
    },
    "3877": {
      "op": "POP"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3880": {
      "op": "DUP7"
    },
    "3881": {
      "op": "ADD"
    },
    "3882": {
      "op": "MLOAD"
    },
    "3883": {
      "op": "SWAP3"
    },
    "3884": {
      "op": "POP"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3887": {
      "op": "DUP7"
    },
    "3888": {
      "op": "ADD"
    },
    "3889": {
      "op": "MLOAD"
    },
    "3890": {
      "op": "SWAP2"
    },
    "3891": {
      "op": "POP"
    },
    "3892": {
      "op": "PUSH2",
      "value": "0xF3F"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3897": {
      "op": "DUP8"
    },
    "3898": {
      "op": "ADD"
    },
    "3899": {
      "op": "PUSH2",
      "value": "0xEE1"
    },
    "3902": {
      "jump": "i",
      "op": "JUMP"
    },
    "3903": {
      "op": "JUMPDEST"
    },
    "3904": {
      "op": "SWAP1"
    },
    "3905": {
      "op": "POP"
    },
    "3906": {
      "op": "SWAP3"
    },
    "3907": {
      "op": "SWAP6"
    },
    "3908": {
      "op": "POP"
    },
    "3909": {
      "op": "SWAP3"
    },
    "3910": {
      "op": "SWAP6"
    },
    "3911": {
      "op": "SWAP1"
    },
    "3912": {
      "op": "SWAP4"
    },
    "3913": {
      "op": "POP"
    },
    "3914": {
      "jump": "o",
      "op": "JUMP"
    },
    "3915": {
      "op": "JUMPDEST"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3920": {
      "op": "DUP3"
    },
    "3921": {
      "op": "DUP5"
    },
    "3922": {
      "op": "SUB"
    },
    "3923": {
      "op": "SLT"
    },
    "3924": {
      "op": "ISZERO"
    },
    "3925": {
      "op": "PUSH2",
      "value": "0xF5D"
    },
    "3928": {
      "op": "JUMPI"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3931": {
      "op": "DUP1"
    },
    "3932": {
      "op": "REVERT"
    },
    "3933": {
      "op": "JUMPDEST"
    },
    "3934": {
      "op": "DUP2"
    },
    "3935": {
      "op": "MLOAD"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3938": {
      "op": "DUP2"
    },
    "3939": {
      "op": "AND"
    },
    "3940": {
      "op": "DUP2"
    },
    "3941": {
      "op": "EQ"
    },
    "3942": {
      "op": "PUSH2",
      "value": "0xC99"
    },
    "3945": {
      "op": "JUMPI"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3948": {
      "op": "DUP1"
    },
    "3949": {
      "op": "REVERT"
    }
  },
  "sha1": "a07dd3c65eadbbd1775db709fda12abe1584eade",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\ncontract TokenFarm is Ownable {\n    // token address -> staker address -> total amount\n    mapping(address => mapping(address => uint256)) public stakingBalance;\n\n    // number of tokens that each users staked\n    mapping(address => uint256) public uniqueTokensStaked;\n\n    // token address to token price feed address from chainlink\n    mapping(address => address) public tokenPriceFeedMapping;\n\n    /// @return The address of the allowed token\n    address[] public allowedTokens;\n    // list of stakers\n    address[] public stakers;\n\n    IERC20 public dappToken;\n\n    constructor(address _dappTokenAddress) {\n        // to initialize our dappToken we have to pass\n        // the address of deployed ERC20 (DappToken)\n        dappToken = IERC20(_dappTokenAddress);\n    }\n\n    // function to associate token adresses with price feed addresses\n    function setPriceFeedContract(address _token, address _priceFeed)\n        public\n        onlyOwner\n    {\n        tokenPriceFeedMapping[_token] = _priceFeed;\n    }\n\n    function getAllowedTokensCount() public view returns (uint256 count) {\n        return allowedTokens.length;\n    }\n\n    // stake tokens\n    function stakeTokens(uint256 _amount, address _token) public {\n        require(_amount > 0, \"Amount must be more than 0\");\n        require(tokenIsAllowed(_token), \"Token not allowed!\");\n        // transfer money to the contract\n        IERC20(_token).transferFrom(msg.sender, address(this), _amount);\n        updateUniqueTokensStaked(msg.sender, _token);\n        // add the amount to stakingBalance mapping\n        stakingBalance[_token][msg.sender] =\n            stakingBalance[_token][msg.sender] +\n            _amount;\n        // if this is the first time someone staked\n        // add him to the list of stakers\n        if (uniqueTokensStaked[msg.sender] == 1) {\n            stakers.push(msg.sender);\n        }\n    }\n\n    function ustakeTokens(address _token) public {\n        uint256 balance = stakingBalance[_token][msg.sender];\n        require(balance > 0, \"Staking balance cannot be 0\");\n        IERC20(_token).transfer(msg.sender, balance);\n        stakingBalance[_token][msg.sender] = 0;\n        uniqueTokensStaked[msg.sender] = uniqueTokensStaked[msg.sender] - 1;\n    }\n\n    function issueTokens() public onlyOwner {\n        for (uint256 stakerId = 0; stakerId < stakers.length; stakerId++) {\n            address recipient = stakers[stakerId];\n            // send them the token reward based on Total Value Locked\n            // we're sending our dapp token\n            // First calculate how much the current staker should receive\n            uint256 stakerTotalValue = getStakerTotalValue(recipient);\n            // to make the computation easier,\n            // user receives the number of tokens equal to dollars staked\n            dappToken.transfer(recipient, stakerTotalValue);\n        }\n    }\n\n    function getStakerTotalValue(address _stakerAddress)\n        public\n        view\n        returns (uint256)\n    {\n        uint256 totalValue = 0;\n        require(uniqueTokensStaked[_stakerAddress] > 0, \"Nothing staked!\");\n        for (\n            uint256 allowedTokensId = 0;\n            allowedTokensId < allowedTokens.length;\n            allowedTokensId++\n        ) {\n            totalValue =\n                totalValue +\n                getUserSingleTokenValue(\n                    _stakerAddress,\n                    allowedTokens[allowedTokensId]\n                );\n        }\n        return totalValue;\n    }\n\n    function getUserSingleTokenValue(address _staker, address _token)\n        public\n        view\n        returns (uint256)\n    {\n        if (uniqueTokensStaked[_staker] <= 0) {\n            // check again if user has token staked\n            // we don't want to use require,\n            // because we want to keep going\n            return 0;\n        }\n\n        (uint256 price, uint256 decimals) = getTokenValue(_token);\n        uint256 totalValueInUsd = (stakingBalance[_token][_staker] * price) /\n            (10**decimals);\n        return totalValueInUsd;\n    }\n\n    function getTokenValue(address _token)\n        public\n        view\n        returns (uint256, uint256)\n    {\n        address priceFeedAddress = tokenPriceFeedMapping[_token];\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            priceFeedAddress\n        );\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint256 decimals = uint256(priceFeed.decimals());\n        return (uint256(price), decimals);\n    }\n\n    function updateUniqueTokensStaked(address _staker, address _token)\n        internal\n    {\n        if (stakingBalance[_token][_staker] <= 0) {\n            uniqueTokensStaked[_staker] = uniqueTokensStaked[_staker] + 1;\n        }\n    }\n\n    function addAllowedTokens(address _token) public onlyOwner {\n        allowedTokens.push(_token);\n    }\n\n    function tokenIsAllowed(address _token) public returns (bool) {\n        for (uint256 idx = 0; idx < allowedTokens.length; idx++) {\n            if (allowedTokens[idx] == _token) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n",
  "sourceMap": "246:5115:4:-:0;;;816:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:2;921:18:0;:32::i;:::-;973:9:4;:37;;-1:-1:-1;;;;;;973:37:4;-1:-1:-1;;;;;973:37:4;;;;;;;;;;246:5115;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;246:5115:4;;;;;;",
  "sourcePath": "contracts/TokenFarm.sol",
  "type": "contract"
}